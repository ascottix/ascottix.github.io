import{BgDiagram as t}from"https://cdn.jsdelivr.net/gh/ascottix/bgdiagram@v1.0.2/dist/bgdiagram.min.js";class e{static Readonly=!1;static Writable=!0;static async open(t,i,n){const s=indexedDB.open(t,i);return s.onupgradeneeded=function(){n(s.result)},e.handleRequest(s)}static async handleRequest(t){return new Promise(((e,i)=>{t.onsuccess=()=>e(t.result),t.onerror=()=>i(t.error)}))}static range(t,e,i,n){return null==e?IDBKeyRange.only(t):IDBKeyRange.bound(t,e,i,n)}static iterateCursor(t,e,i,n){return e=e||(()=>!0),new Promise((s=>{const a=[];t.onsuccess=function(t){const o=t.target.result;o?i?(o.advance(i),i=0):(e(o.value,o)&&a.push(o.value),n&&a.length>=n?s(a):o.continue()):s(a)}}))}static pagedIterator(t,e,i){const n=[0];let s=0;async function a(){const a=await t(),o=[];let r=-1;return new Promise((t=>{a.onsuccess=function(a){const l=a.target.result;if(l){if(r<0&&(r=n[s],r>0))return void l.advance(r);if(!i||i(l.value)){if(o.length==e)return t({data:o,page:s,last:!1}),void(s==n.length-1&&n.push(r));o.push(l.value)}r++,l.continue()}else t({data:o,page:s,last:!0})}}))}function o(){r(s+1)}function r(t){t>=0&&t<n.length&&(s=t)}return{read:a,next:o,prev:function(){r(s-1)},seek:r,size:async function(){const n=await t();let s=0;return new Promise((t=>{n.onsuccess=function(n){const a=n.target.result;a?(i&&!i(a.value)||s++,a.continue()):t({count:s,pages:Math.ceil(s/e)})}}))},last:async function(){for(;;){const t=await a();if(t.last)return t;o()}}}}}class i{constructor(t,e){this.idb=t,this.name=e}store(t,e){return(e=e||this.idb.transaction(this.name,t?"readwrite":"readonly")).objectStore(this.name)}index(t,e,i){return this.store(e,i).index(t)}async get(t,i){return e.handleRequest(this.store(e.Readonly,i).get(t))}async add(t,i){return e.handleRequest(this.store(e.Writable,i).add(t))}async put(t,i){return e.handleRequest(this.store(e.Writable,i).put(t))}async delete(t,i){return e.handleRequest(this.store(e.Writable,i).delete(t))}async list(t){return e.handleRequest(this.store(e.Readonly,t).getAll())}async filter(t,i){return e.iterateCursor(this.store(e.Readonly,i).openCursor(),t)}async clear(t){return e.handleRequest(this.store(e.Writable,t).clear())}}class n{constructor(t,e){this.idbStore=t,this.name=e}#t(){return this.idbStore.index(this.name)}async get(t){return e.handleRequest(this.#t().get(t))}async all(t){return e.handleRequest(this.#t().getAll(t))}async count(t){return e.handleRequest(this.#t().count(t))}async list(t,i){return e.iterateCursor(this.#t().openCursor(t),i)}async unique(){return e.iterateCursor(this.#t().openCursor(void 0,"nextunique"))}async keys(){return e.handleRequest(this.#t().getAllKeys())}async page(t,i,n){return e.iterateCursor(this.#t().openCursor(),n,t,i)}}const s="collections",a="positions",o="settings",r="idx_pos_id_coll",l="idx_pos_cat",c="idx_pos_due",d="idx_pos_state",u="idx_coll_name";class p{constructor(t){this.db=t}static async open(){const t=await e.open("BgDiagramDb",1,(t=>{const e=t.createObjectStore(s,{keyPath:"id",autoIncrement:!0});e.createIndex(u,"name",{unique:!0});const i=t.createObjectStore(a,{keyPath:"id",autoIncrement:!0});i.createIndex(r,"id_coll"),i.createIndex(l,"tags",{multiEntry:!0}),i.createIndex(d,"sr.state"),i.createIndex(c,"sr.due"),t.createObjectStore(o,{keyPath:"name"}),e.transaction.oncomplete=()=>{t.transaction([s,a],"readwrite").objectStore(s).add({name:"Default"})}}));return new p(t)}get version(){return 1}get objectStoreNames(){return[...this.db.objectStoreNames]}transaction(t,e){return this.db.transaction(t||this.objectStoreNames,e?"readwrite":"readonly")}collections(){return new i(this.db,s)}positions(){return new i(this.db,a)}settings(){return new i(this.db,o)}async createCollection(t,e){return this.collections().add(t,e)}async getCollection(t,e){return this.collections().get(t,e)}async deleteCollection(t,i){i=i||this.transaction([s,a],e.Writable);const n=this.positions().index(r,e.Writable,i).openCursor(t);return await e.iterateCursor(n,((t,e)=>e.delete())),this.collections().delete(t,i)}async updateCollection(t,e){return this.collections().put(t,e)}async listCollections(t,e){const i=await this.collections().list(e);if(t)for(const t of i)t.size=await this.countPositions(t.id,e);return i}async existsCollection(t){return new n(this.collections(),u).get(t).then((t=>null!=t))}async addPosition(t,e){return this.positions().add(t,e)}async getPosition(t,e){return this.positions().get(t,e)}async deletePosition(t,e){return this.positions().delete(t,e)}async updatePosition(t,e){return this.positions().put(t,e)}async listPositions(t){return new n(this.positions(),r).all(t)}async countPositions(t){return new n(this.positions(),r).count(t)}async getUniquePositionCategories(){const t=[],i=this.positions().index(l);return await e.iterateCursor(i.openCursor(void 0,"nextunique"),((e,i)=>(t.push(i.key),!0))),t}getPositionsIndexByCategory(){return this.positions().index(l)}getPositionsIndexByCollection(){return this.positions().index(r)}async findCardsInState(t,i,s){if(t){const e=(await this.listPositions(t)).filter((t=>t.sr?.state==i));return s?e.length:e}{const t=new n(this.positions(),d),a=e.range(i);return s?t.count(a):t.all(a)}}async findDueCards(t,i,s){if(i=i||Date.now(),t){const e=(await this.listPositions(t)).filter((t=>t.sr?.due<=i));return s?e.length:e}{const t=new n(this.positions(),c),a=e.range(0,i);return s?t.count(a):t.all(a)}}async getSetting(t){return this.settings().get(t).then((t=>t?.value))}async setSetting(t,e){return this.settings().put({name:t,value:e})}async getAllSettings(){return this.settings().list().then((t=>t.reduce(((t,e)=>(t[e.name]=e.value,t)),{})))}}const h="data-translate",b={en:{messages:{add:"Add",all:"All",actions:"Actions","back-to-grid":"Back to positions list",bold:"Bold",cancel:"Cancel",category:"Category","choose-collection":"Choose a collection",close:"Close",collection:"Collection",collections:"Collections",comment:"Comment",confirm:"Confirm","confirm-delete-collection":"Are you sure you want to delete the collection <b>{name}</b>? It contains {positions}.","confirm-delete-position":"Are you sure you want to delete the position <b>{name}</b>? It will also be removed from collection <b>{coll}</b>.",continue:"Continue",create:"Create","create-new-collection":"Create","db-empty":"Your database is empty.","db-summary":"Your database contains {collections} and {positions}.",delete:"Delete",description:"Description",diagram:"Diagram",edit:"Edit","edit-collection":"Edit collection","edit-position":"Edit position","enter-valid-xgid":"Enter a valid XGID to generate a diagram.",error:"Error","error-import-collection":"Could not import the collection. Error: {error}","error-import-collection-duplicate":"Could not import the collection, because a collection named <b>{name}</b> already exists. You should rename or delete it before trying again.","error-import-collection-version":"Could not import the data, because it was created with a newer version of the application. Please update the application and try again.","error-restore-backup":"Could not restore the backup. Error: {error}","error-restore-backup-data":"The backup data is missing or invalid. Make sure you selected a valid backup file and try again.","error-restore-backup-version":"Could not restore the backup, because it was created with a newer version of the application. Please update the application and try again.",export:"Export","field-required":"This field is required.",heading1:"Heading 1",heading2:"Heading 2",heading3:"Heading 3","hide-pipcount":"Hide pipcount","hide-point-numbers":"Hide point numbers",home:"Home","home-board-left":"Home board on the left","home-page-header":"Hello, welcome to BgDiagramDb!","home-page-subheader":"Improve your backgammon, one position at a time.","home-page-text":"This app helps you collect, study, and review backgammon positionsâ€”from your own mistakes to problems from books, videos, and online matches.<br></br>Organize positions into custom collections, add tags to find them easily, and study them Anki-style: with interactive diagrams, questions and answers, and a spaced repetition system for long-term memory.<br></br>Practice your pip counting too, and track your progress.<br></br>All directly in your browser, with your data stored locally.","horiz-rule":"Horizontal rule",import:"Import","invalid-xgid":"Invalid XGID.",italic:"Italic",language:"Language",left:"Left",link:"Link",list:"List",loading:"Loading...","markdown-guide-link":"Guide (external link)",name:"Name","new-collection":"New collection","new-position":"New position",next:"Next","numbered-list":"Numbered list",ok:"Ok","optional-question":"If present, this question will be used in the {#train}: {#train-positions} section.","position-i-of-n":"Position {i} of {n}",positions:"Positions","positions-found":"{positions} found.","positions-page-nav":"Navigation for the positions grid",previous:"Previous",question:"Question",right:"Right",save:"Save",settings:"Settings","settings-about":"About","settings-about-text":"BgDiagramDb is distributed as free software under the <a href='https://www.gnu.org/licenses/gpl-3.0.en.html' target='_blank' rel='noopener'>GNU General Public License v3.0</a>.<p><p>The source code is freely available, modifiable, and redistributable under the terms of the license. The project is hosted on {#_githubHomepageLink}.","settings-about-acknowledgements":"Credits","settings-about-acknowledgements-text":"BgDiagramDb makes use of the following components:","settings-about-ack-bgdiagram":"Library for SVG diagrams of backgammon positions.","settings-about-ack-bootstrap":"CSS framework for responsive layouts and UI components.","settings-about-ack-dompurify":"DOM-only, super-fast, uber-tolerant XSS sanitizer for HTML, MathML and SVG.","settings-about-ack-marked":"Fast and flexible Markdown parser written in JavaScript.","settings-about-contacts":"Contacts","settings-about-contacts-text":"For feedback or bug reports, please visit the project page on {#_githubHomepageLink}.","settings-general":"General","settings-train-pos":"{#train}","settings-diagrams":"Diagrams","settings-backup-restore":"Backup and restore","settings-backup-restore-intro":"You can save a copy of your data or restore it from a backup file.","settings-backup":"Download backup","settings-restore":"Restore backup","settings-fsrs-advanced-note":"Advanced settings are recommended only if you are already familiar with Anki and spaced repetition algorithms.","settings-fsrs-max-cards-per-session":"Total positions per session (limit)","settings-fsrs-max-new-cards-per-session":"New positions per session (limit)","settings-fsrs-rating-ui":"Rating system","settings-fsrs-rating-ui-advanced":"Advanced","settings-fsrs-rating-ui-standard":"Standard","settings-fsrs-retention":"Desired retention level","settings-fsrs-retention-80":"Standard (less reviews)","settings-fsrs-retention-85":"Strong","settings-fsrs-retention-90":"High","settings-fsrs-retention-95":"Maximum (more reviews)","show-answer":"Show answer",size:"Size",start:"Start",strikethrough:"Strikethrough",table:"Table",theme:"Theme","theme-auto":"Auto","theme-dark":"Dark","theme-light":"Light",title:"Title","toast-collection-deleted":"Collection <b>{name}</b> deleted.","toast-collection-imported":"Collection <b>{name}</b> imported.","toast-collection-updated":"Collection <b>{name}</b> updated.","toast-copied-to-clipboard":"Copied to clipboard.","toast-database-restored":"Backup restored successfully.","toast-position-added":"Position added.","toast-position-deleted":"Position deleted.","toast-position-updated":"Position updated.","tooltip-delete-collection":"Delete this collection and all the positions it contains","tooltip-delete-position":"Delete this position","tooltip-edit-collection":"Edit this collection name and description","tooltip-edit-position":"Edit this position","tooltip-preview-arrow":"Show the move with arrows","tooltip-preview-board":"Show the move on the board","tooltip-train-pip-time-stats":"Answer time: average / min - max","tooltip-view-collection":"View this collection content",train:"Training","train-pipcount":"Pipcount","train-pip-caption":"Want to improve your speed and accuracy when counting pips? This mode helps you practice quickly and effectively!","train-pip-comment":"#### Top player:\n# {bpc} ({bpdiff})\n<br/>\n\n#### Bottom player:\n# {wpc} ({wpdiff})","train-pip-intro":"You'll be shown a random backgammon position: your goal is to count the pips for both players without any help.<p><p>Once you think youâ€™ve got it, click <span class='badge bg-primary'><i class='bi bi-eye'></i> {#show-answer}</span> to reveal the correct count.<p>Then mark whether your answer was correct or wrong to track your progress.<p>At the top right, you'll see your session stats: number of positions viewed and your timing (average, fastest, and slowest).<p>When you're ready, hit <span class='badge bg-primary'><i class='bi bi-arrow-right'></i> {#start}</span> to begin!","train-pip-question":"How many pips?","train-pip-rate-wrong":"Almost...","train-pip-rate-right":"On point!","train-positions":"Positions","train-pos-advanced-note":"<strong>Note:</strong> youâ€™re using the <strong>Advanced</strong> interface.<p><p>After each answer, youâ€™ll choose from <strong>four options</strong>: <em>{#train-pos-rate-again}</em> if you got it wrong, or <em>{#train-pos-rate-hard}</em>, <em>{#train-pos-rate-good}</em>, or <em>{#train-pos-rate-easy}</em> if you were correct, depending on how difficult it was to recall.<p class=mb-0>Each option also shows the <strong>estimated time</strong> before you'll see the position again.","train-pos-back-home":"Back to {#train}: {#train-positions}","train-pos-caption":"Recognizing the right positions can make the difference! With this training, youâ€™ll sharpen your memory and fine-tune your intuition, step by step.","train-pos-intro-toggle":"How does it work?","train-pos-intro":"Youâ€™ll be shown positions taken from your collections, often accompanied by a question or a short description. Your task is to decide the best move: it could be offering or accepting the cube, or choosing between different plays.<p><p>Once you've made your decision, click <span class='badge bg-primary'><i class='bi bi-eye'></i> {#show-answer}</span> to reveal the solution.Then mark whether your answer was correct or wrong â€” this helps the system understand how well youâ€™ve memorized the position.<p>Positions arenâ€™t shown at random: theyâ€™re selected using a spaced repetition algorithm designed to help you memorize key patterns and retain them over time. If you make a mistake, the position will come back soon. If you get it right, youâ€™ll see it again later, with longer and longer intervals.<p>The goal isnâ€™t just to get the right answer once â€” itâ€™s to recognize key situations at a glance.<p>The session ends automatically when there are no more positions to review. At the end, youâ€™ll see a summary of your progress.<p>When youâ€™re ready, choose what to study and hit <span class='badge bg-primary'><i class='bi bi-arrow-right'></i> {#start}</span> to begin!","train-pos-rate-again":"Again","train-pos-rate-hard":"Hard","train-pos-rate-good":"Good","train-pos-rate-easy":"Easy","train-pos-rate-simple-again":"Missed...","train-pos-rate-simple-good":"Got it!","train-pos-session-preview":"New: <b>{newcards}</b>, to review: <b>{duecards}</b>","train-pos-session-summary":"You have studied {totalCards:positions} (<b>{newCards}</b> new, <b>{reviewCards}</b> reviewed) in {sessionDurationMin:minutes}.","train-pos-no-more-positions":"There are no more positions to study for now, check back later to keep training!","unit-seconds":"{n}s",warning:"Warning","warning-restore-backup":"<strong>Warning:</strong> restoring a backup will delete all current data and replace it with the contents of the selected file.<p>This operation is <strong>irreversible</strong>.</p><p>To continue, type <kbd>ok</kbd> in the field below and press <strong>{#continue}</strong>.</p>","well-done":"Well done!","write-here":"Write here...","write-ok-to-continue":"Write ok to continue"},params:{collections:{one:"<b>{n}</b> collection",other:"<b>{n}</b> collections"},days:{one:"{n} day",other:"{n} days"},hours:{one:"{n} hour",other:"{n} hours"},minutes:{one:"{n} minute",other:"{n} minutes"},months:{one:"{n} month",other:"{n} months"},positions:{one:"<b>{n}</b> position",other:"<b>{n}</b> positions"},weeks:{one:"{n} week",other:"{n} weeks"},years:{one:"{n} year",other:"{n} years"}}},it:{messages:{add:"Aggiungi",all:"Tutte",actions:"Azioni","back-to-grid":"Torna alla lista delle posizioni",bold:"Grassetto",cancel:"Annulla",continue:"Continua",category:"Categoria","choose-collection":"Scegli una raccolta",close:"Chiudi",collection:"Raccolta",collections:"Raccolte",comment:"Commento",confirm:"Conferma","confirm-delete-collection":"Vuoi davvero eliminare la raccolta <b>{name}</b>? Contiene {positions}.","confirm-delete-position":"Vuoi davvero eliminare la posizione <b>{name}</b>? SarÃ  rimossa anche dalla raccolta <b>{coll}</b>.",create:"Crea","create-new-collection":"Crea","db-empty":"Il tuo database Ã¨ vuoto.","db-summary":"Il tuo database contiene {collections} e {positions}.",delete:"Elimina",description:"Descrizione",diagram:"Diagramma",edit:"Modifica","edit-collection":"Modifica raccolta","edit-position":"Modifica posizione","enter-valid-xgid":"Inserisci un XGID valido per generare un diagramma.",error:"Errore","error-import-collection":"Non Ã¨ stato possibile importare la raccolta","error-import-collection-generic":"{#error-import-collection}. Errore: {error}","error-import-collection-duplicate":"{#error-import-collection}, perchÃ© esiste giÃ  una raccolta chiamata <b>{name}</b>. Dovresti rinominarla o eliminarla prima di provare ancora.","error-import-collection-version":"{#error-import-collection}, perchÃ© sono stati creati con una versione piÃ¹ recente dell'applicazione. Aggiorna l'applicazione e riprova.","error-restore-backup":"Non Ã¨ stato possibile ripristinare il backup. Errore: {error}","error-restore-backup-data":"Dati di backup mancanti o non validi. Assicurati di selezionare un file di backup valido e riprova.","error-restore-backup-version":"Non Ã¨ stato possibile ripristinare il backup, perchÃ© Ã¨ stato creato con una versione piÃ¹ recente dell'applicazione. Aggiorna l'applicazione e riprova.",export:"Esporta","field-required":"Questo campo Ã¨ obbligatorio.",heading1:"Intestazione 1",heading2:"Intestazione 2",heading3:"Intestazione 3","hide-pipcount":"Nascondi il pipcount","hide-point-numbers":"Nascondi gli indicatori delle punte",home:"Home","home-board-left":"Casa a sinistra","home-page-header":"Ciao, benvenuto in BgDiagramDb!","home-page-subheader":"Migliora il tuo backgammon, una posizione alla volta.","home-page-text":"Questa app ti aiuta a raccogliere, studiare e ripassare posizioni di backgammon: dai tuoi errori ai problemi tratti da libri, video e partite online.<br></br>Organizza le posizioni in raccolte personalizzate, aggiungi tag per ritrovarle facilmente, e studiale come su Anki: con diagrammi interattivi, domande e risposte, e un sistema di ripasso basato sulla memoria a lungo termine.<br></br>Allenati anche sul pip count, e tieni traccia dei tuoi progressi.<br></br>Tutto direttamente nel tuo browser, con i tuoi dati salvati in locale.","horiz-rule":"Riga orizzontale",import:"Importa","invalid-xgid":"XGID non valido.",italic:"Corsivo",language:"Lingua",left:"Sinistra",link:"Link",list:"Lista",loading:"Caricamento...","markdown-guide-link":"Guida (link esterno)",name:"Nome","new-collection":"Nuova raccolta","new-position":"Nuova posizione",next:"Avanti","numbered-list":"Lista numerata",ok:"Ok","optional-question":"Se presente, questa domanda sarÃ  usata nella sezione {#train}: {#train-positions}.","position-i-of-n":"Posizione {i} di {n}",positions:"Posizioni","positions-found":"{positions-found}.","positions-page-nav":"Navigazione per la griglia delle posizioni",previous:"Precedente",question:"Domanda",right:"Destra",save:"Salva",settings:"Impostazioni","settings-about":"Informazioni","settings-about-text":"BgDiagramDb Ã¨ distribuito come software libero sotto licenza <a href='https://www.gnu.org/licenses/gpl-3.0.en.html' target='_blank' rel='noopener'>GNU General Public License v3.0</a>.<p><p>Il codice sorgente Ã¨ liberamente consultabile, modificabile e redistribuibile nel rispetto della licenza. Il progetto Ã¨ disponibile su {#_githubHomepageLink}.","settings-about-acknowledgements":"Riconoscimenti","settings-about-acknowledgements-text":"BgDiagramDb fa uso dei seguenti componenti:","settings-about-ack-bgdiagram":"Libreria per diagrammi vettoriali di posizioni di backgammon.","settings-about-ack-bootstrap":"Framework CSS per layout responsivi e componenti UI.","settings-about-ack-dompurify":"Sanitizzatore XSS basato su DOM, super veloce e ultra tollerante per HTML, MathML e SVG.","settings-about-ack-marked":"Parser Markdown veloce e flessibile in JavaScript.","settings-about-contacts":"Contatti","settings-about-contacts-text":"Per feedback o segnalazioni, visita la pagina del progetto su {#_githubHomepageLink}.","settings-general":"Generali","settings-train-pos":"{#train}","settings-diagrams":"Diagrammi","settings-backup-restore":"Backup e ripristino","settings-backup-restore-intro":"Puoi salvare una copia dei tuoi dati o ripristinarli da un file di backup.","settings-backup":"Scarica backup","settings-restore":"Ripristina backup","settings-fsrs-advanced-note":"Le impostazioni avanzate sono consigliate solo se hai giÃ  familiaritÃ  con Anki e con gli algoritmi di ripassi programmati.","settings-fsrs-max-cards-per-session":"Posizioni totali per sessione (limite)","settings-fsrs-max-new-cards-per-session":"Nuove posizioni per sessione (limite)","settings-fsrs-rating-ui":"Sistema di valutazione","settings-fsrs-rating-ui-advanced":"Avanzato","settings-fsrs-rating-ui-standard":"Standard","settings-fsrs-retention":"Livello di memorizzazione desiderato","settings-fsrs-retention-80":"Normale (meno ripassi)","settings-fsrs-retention-85":"Solido","settings-fsrs-retention-90":"Elevato","settings-fsrs-retention-95":"Massimo (piÃ¹ ripassi)","show-answer":"Mostra risposta",size:"Dimensione",start:"Inizia",strikethrough:"Barrato",table:"Tabella",theme:"Tema","theme-auto":"Automatico","theme-dark":"Scuro","theme-light":"Chiaro",title:"Titolo","toast-collection-deleted":"Raccolta <b>{name}</b> eliminata.","toast-collection-imported":"Raccolta <b>{name}</b> importata.","toast-collection-updated":"Raccolta <b>{name}</b> aggiornata.","toast-copied-to-clipboard":"Copiato negli appunti.","toast-database-restored":"Backup ripristinato con successo.","toast-position-added":"Posizione aggiunta.","toast-position-deleted":"Posizione eliminata.","toast-position-updated":"Posizione aggiornata.","tooltip-delete-collection":"Elimina questa raccolta e tutte le posizioni che contiene","tooltip-delete-position":"Elimina questa posizione","tooltip-edit-collection":"Modifica il nome e la descrizione di questa raccolta","tooltip-edit-position":"Modifica questa posizione","tooltip-preview-arrow":"Mostra la mossa con le frecce","tooltip-preview-board":"Mostra la mossa sul board","tooltip-train-pip-time-stats":"Tempo di risposta: medio / min - max","tooltip-view-collection":"Guarda il contenuto di questa raccolta",train:"Allenamento","train-pipcount":"Pipcount","train-pip-caption":"Vuoi migliorare la tua velocitÃ  e precisione nel contare i pip? Questa modalitÃ  ti aiuta a farlo in modo semplice ed efficace!","train-pip-comment":"#### Giocatore in alto:\n# {bpc} ({bpdiff})\n<br/>\n\n#### Giocatore in basso:\n# {wpc} ({wpdiff})","train-pip-intro":"Ti verrÃ  mostrata una posizione casuale di backgammon: il tuo obiettivo Ã¨ contare i pip di ciascun giocatore senza aiuti. Quando pensi di avere la risposta, clicca su <span class='badge bg-primary'><i class='bi bi-eye'></i> {#show-answer}</span> per vedere il conteggio corretto.<p><p>Poi indica se la tua risposta era giusta o sbagliata per tenere traccia dei tuoi progressi.<p>In alto a destra troverai le statistiche della tua sessione: quante posizioni hai visto e i tuoi tempi (medio, minimo e massimo).<p>Quando sei pronto, premi <span class='badge bg-primary'><i class='bi bi-arrow-right'></i> {#start}</span> per cominciare!","train-pip-question":"Quanti sono i pip dei giocatori?","train-pip-rate-wrong":"Quasi...","train-pip-rate-right":"Perfetto!","train-positions":"Posizioni","train-pos-advanced-note":"<strong>Nota:</strong> stai usando lâ€™interfaccia <strong>Avanzata</strong>.<p><p>Dopo ogni risposta potrai scegliere tra <strong>quattro opzioni</strong>: <em>{#train-pos-rate-again}</em> se hai sbagliato, oppure <em>{#train-pos-rate-hard}</em>, <em>{#train-pos-rate-good}</em> o <em>{#train-pos-rate-easy}</em> se hai risposto correttamente, in base a quanto ti Ã¨ costato ricordarla.<p class=mb-0>Ogni scelta mostra anche il <strong>tempo previsto</strong> prima di rivedere la posizione.","train-pos-back-home":"Torna a {#train}: {#train-positions}","train-pos-caption":"Riconoscere le posizioni giuste puÃ² fare la differenza! Con questo allenamento migliori la memoria e affini lâ€™intuito, in modo graduale.","train-pos-intro-toggle":"Come funziona?","train-pos-intro":"Ti verranno presentate posizioni prese dalle tue raccolte, spesso accompagnate da una domanda o una breve descrizione. Il tuo compito Ã¨ decidere la mossa migliore: potrebbe trattarsi di offrire o accettare il cubo, oppure di scegliere tra diverse mosse.<p><p>Quando hai preso una decisione, clicca su <span class='badge bg-primary'><i class='bi bi-eye'></i> {#show-answer}</span> per scoprire la soluzione. Poi indica se la tua risposta era giusta o sbagliata: questo aiuta il sistema a capire quanto hai memorizzato la posizione.<p>Le posizioni infatti non vengono mostrate a caso: sono selezionate da un algoritmo di <em>ripassi programmati</em>, pensato per aiutarti a memorizzare le situazioni e a ricordarle nel tempo. Se sbagli, la posizione tornerÃ  presto. Se rispondi correttamente, la rivedrai piÃ¹ avanti, con intervalli sempre piÃ¹ lunghi.<p>Lâ€™obiettivo non Ã¨ solo rispondere bene una volta, ma riconoscere le situazioni chiave a colpo dâ€™occhio.<p>La sessione termina automaticamente quando non ci sono piÃ¹ posizioni da rivedere. Al termine, verrÃ  mostrato un riepilogo dei tuoi progressi.<p>Quando sei pronto, scegli cosa studiare e premi <span class='badge bg-primary'><i class='bi bi-arrow-right'></i> {#start}</span> per cominciare!","train-pos-rate-again":"Riprova","train-pos-rate-hard":"Difficile","train-pos-rate-good":"Normale","train-pos-rate-easy":"Facile","train-pos-rate-simple-again":"No...","train-pos-rate-simple-good":"Giusto!","train-pos-session-preview":"Nuove: <b>{newcards}</b>, da rivedere: <b>{duecards}</b>","train-pos-session-summary":"Hai studiato {totalCards:positions} (nuove: <b>{newCards}</b>, ripassate: <b>{reviewCards}</b>) in {sessionDurationMin:minutes}.","train-pos-no-more-positions":"Non ci sono altre posizioni da studiare per ora, ritorna piÃ¹ tardi per continuare ad allenarti!","unit-seconds":"{n}s",warning:"Attenzione","warning-restore-backup":"<strong>Attenzione:</strong> il ripristino di un backup eliminerÃ  tutti i dati attualmente presenti e li sostituirÃ  con quelli contenuti nel file selezionato.<p>Questa operazione Ã¨ <strong>irreversibile</strong>.</p><p>Per continuare, scrivi <kbd>ok</kbd> nel campo sottostante e premi <strong>{#continue}</strong>.</p>","well-done":"Ben fatto!","write-here":"Scrivi qui...","write-ok-to-continue":"Scrivi ok per continuare"},params:{collections:{one:"<b>{n}</b> raccolta",other:"<b>{n}</b> raccolte"},days:{one:"{n} giorno",other:"{n} giorni"},hours:{one:"{n} ora",other:"{n} ore"},minutes:{one:"{n} minuto",other:"{n} minuti"},months:{one:"{n} mese",other:"{n} mesi"},positions:{one:"<b>{n}</b> posizione",other:"<b>{n}</b> posizioni"},"positions-found":{one:"<b>{n}</b> posizione trovata",other:"<b>{n}</b> posizioni trovate"},weeks:{one:"{n} settimana",other:"{n} settimane"},years:{one:"{n} anno",other:"{n} anni"}}}};function m(t){b[t].pluralRules=new Intl.PluralRules(t,{type:"cardinal"}),b[t].messages._githubHomepageLink='<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>'}function g(t,e){const i=A.settings.appLanguage,n=b[i]||b.en;let s=n.messages[t]||t;return e&&(s=s.replace(/\{(.*?)\}/g,((t,i)=>{const[s,a]=i.split(":"),o=e[s];if("number"==typeof o){const t=n.params[a||s];if(t)return(t[n.pluralRules.select(o)]||t.other).replace("{n}",o)}return o}))),s=s.replace(/\{#(.*?)\}/g,((t,i)=>n.messages[i]?g(i,e):`{#${i}}`)),s}function v(t,e){t.querySelectorAll(`[${h}]`).forEach((t=>{const i=t.getAttribute(h);t.innerHTML=g(i,e)}))}m("en"),m("it");const f="click",w="hidden.bs.modal",y="shown.bs.modal";async function k(t,e=()=>!0){return new Promise((i=>{const n=new window.bootstrap.Modal(t);function s(){t.querySelector("input, select, textarea")?.focus()}function a(t){if("BUTTON"!=t.target.tagName)return;const s=t.target.getAttribute("data-action")||"";e(s)&&(i(s),n.hide())}t.addEventListener(y,s),t.addEventListener(f,a),t.addEventListener(w,(function e(){t.removeEventListener(f,a),t.removeEventListener(w,e),t.removeEventListener(y,s),i("")})),n.show()}))}function x(t,e,i){t&&(i?t.classList.add(e):t.classList.remove(e))}function $(t){const e={};if(t)for(const i of t.attributes)i.name.startsWith("data-")&&(e[i.name.substring(5)]=i.value);return e}const C={delay:{show:500,hide:100}};function _(t,e={}){t.querySelectorAll("[title]").forEach((t=>{new window.bootstrap.Tooltip(t,{...C,...e})}))}function L(){const t=document.querySelector(".tooltip");t&&t.remove()}function S(t,e="success",i=3e3){const n=document.getElementById("toast-container"),s="warning"==e||"danger"==e,a=document.createElement("div");a.className=`toast align-items-center text-bg-${e} border-0`,a.setAttribute("role",s?"alert":"status"),a.setAttribute("aria-live",s?"assertive":"polite"),a.setAttribute("aria-atomic","true"),a.setAttribute("data-bs-delay",i),a.innerHTML=`\n <div class="d-flex">\n <div class="toast-body">\n ${t}\n </div>\n <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="${g("close")}"></button>\n </div>\n `,n.appendChild(a),new window.bootstrap.Toast(a).show()}function P(e,i={}){return i.homeOnLeft=A.settings[M.BgdHomeBoardAtLeft],t.fromXgid(e,i)}function T(t,e){const i=JSON.stringify(t,null,2),n=new Blob([i],{type:"application/json"}),s=URL.createObjectURL(n),a=document.createElement("a");a.href=s,a.download=e,document.body.appendChild(a),a.click(),URL.revokeObjectURL(s),document.body.removeChild(a)}const M=Object.freeze({AppLanguage:"appLanguage",AppTheme:"appTheme",BgdTheme:"bgdTheme",BgdHomeBoardAtLeft:"bgdHomeBoardAtLeft",BgdHidePipcount:"bgdHidePipcount",BgdHidePointNumbers:"bgdHidePointNumbers",TrainPosRatingSystem:"trainPosRatingSystem",TrainPosMaxCardsPerSession:"trainPosMaxCardsPerSession",TrainPosMaxNewCardsPerSession:"trainPosMaxNewCardsPerSession",TrainPosDefaultRetention:"trainPosDefaultRetention",_LastBackupTime:"_lastBackupTime",_LastBackupNumCollections:"_lastBackupNumCollections",_LastBackupNumPositions:"_lastBackupNumPositions"}),A=new class{constructor(){this.version="0.1"}async init(){this.db=await p.open(),await this.refreshSettings()}async refreshSettings(){this.settings=await this.db.getAllSettings();const t=(t,e)=>this.settings[t]=this.settings[t]||e;t(M.BgdTheme,"marina"),t(M.TrainPosMaxCardsPerSession,100),t(M.TrainPosMaxNewCardsPerSession,20),t(M.TrainPosDefaultRetention,.85);const e=this.settings[M.AppLanguage]||function(){const t=Object.keys(b),e=navigator.language.slice(0,2);return t.includes(e)?e:t[0]}();await async function(t){if(!b[t]){const e=await fetch(`./lang/${t}.json`),i=await e.json();b[t]=i,m(t)}}(e),document.documentElement.lang=e;const i=this.settings[M.AppTheme]||(window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light");document.documentElement.setAttribute("data-bs-theme",i);const n=[...document.body.classList].filter((t=>t.startsWith("bgdiagram__theme--")));document.body.classList.remove(...n),document.body.classList.add("bgdiagram__theme--"+this.settings[M.BgdTheme]),x(document.body,"bgd-hide-pipcount",this.settings[M.BgdHidePipcount]),x(document.body,"bgd-hide-point-numbers",this.settings[M.BgdHidePointNumbers])}};function E(){const t={};return(window.location.hash.split("?")[1]||"").split("&").filter((t=>t)).forEach((e=>{const[i,n]=e.split("=");t[i]=n})),t}function z(t){const e=Object.keys(t).filter((e=>t[e])).map((e=>`${e}=${t[e]}`)).join("&"),i=window.location.hash.split("?")[0];history.replaceState(null,"",`${i}?${e}`)}function q(t){L(),document.getElementById("page").innerHTML=`<page-${t}></page-${t}>`}function H(t){location.hash="#"+t}class D extends HTMLElement{constructor(){super(),window.setActivePage=H,this.innerHTML=`\n<nav class="bg-body-secondary navbar navbar-expand-lg fixed-top">\n <div class="container-fluid">\n <a class="navbar-brand" href="#">BgDiagramDb <span class="badge bg-warning text-dark rounded-pill">Beta</span></a>\n <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"\n aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">\n <span class="navbar-toggler-icon"></span>\n </button>\n <div class="collapse navbar-collapse" id="navbarNav">\n <ul class="navbar-nav">\n <li class="nav-item">\n <a class="nav-link" href="#" onclick="setActivePage('home')" data-bs-toggle="collapse"\n data-bs-target=".navbar-collapse.show">${g("home")}</a>\n </li>\n <li class="nav-item">\n <a class="nav-link" href="#" onclick="setActivePage('collections')" data-bs-toggle="collapse"\n data-bs-target=".navbar-collapse.show">${g("collections")}</a>\n </li>\n <li class="nav-item">\n <a class="nav-link" href="#" onclick="setActivePage('positions')" data-bs-toggle="collapse"\n data-bs-target=".navbar-collapse.show">${g("positions")}</a>\n </li>\n <li class="nav-item dropdown">\n <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"\n data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n ${g("train")}\n </a>\n <div class="dropdown-menu" aria-labelledby="navbarDropdown">\n <a class="dropdown-item" href="#" onclick="setActivePage('train-positions')" data-bs-toggle="collapse"\n data-bs-target=".navbar-collapse.show">${g("train-positions")}</a>\n <a class="dropdown-item" href="#" onclick="setActivePage('train-pipcount')"\n data-bs-toggle="collapse" data-bs-target=".navbar-collapse.show">${g("train-pipcount")}</a>\n </div>\n </li>\n <li class="nav-item" data-bs-toggle="collapse" data-bs-target=".navbar-collapse.show">\n <a class="nav-link" href="#" onclick="setActivePage('settings')">${g("settings")}</a>\n </li>\n </ul>\n </div>\n </div>\n</nav>`}}customElements.define("app-navbar",D);class I extends HTMLElement{constructor(){super(),this.innerHTML=`\n<h1 class="mb-4">${g("home-page-header")}</h1>\n<h3>${g("home-page-subheader")}</h3>\n<p>${g("home-page-text")}</p>\n `}async connectedCallback(){}}customElements.define("page-home",I);const N="data-field";let B=0;function R(t="id"){return`${t}-${B++}`}function j(t,e=!0){const i=e?{ALLOWED_TAGS:[]}:{};return window.DOMPurify.sanitize(t,i)}function G(t,e={}){for(const i in e){const n=t.querySelector(`[${N}="${i}"]`);n&&("checkbox"==n.type?n.checked=e[i]:"value"in n?n.value=e[i]:n.innerHTML=e[i])}W(t)}function O(t){const e={};return t.querySelectorAll(`[${N}]`).forEach((t=>{const i=t.getAttribute(N);e[i]="checkbox"==t.type?t.checked:j(t.value?.trim())})),e}function W(t){t.querySelectorAll(".is-invalid").forEach((t=>{t.classList.remove("is-invalid")}))}function V(t,e){const i=[];return e(O(t),i),W(t),i.forEach((e=>{const i=Object.keys(e)[0];!function(t,e){t.classList.add("is-invalid"),t.nextElementSibling.innerHTML=e}(t.querySelector(`[${N}="${i}"]`),e[i]||g("field-required"))})),0==i.length}const X=19/81,F=[.5701,1.4436,4.1386,10.9355,5.1443,1.2006,.8627,.0362,1.629,.1342,1.0166,2.1174,.0839,.3204,1.4676,.219,2.8237],Q=Object.freeze({Again:1,Hard:2,Good:3,Easy:4}),U=Object.freeze({New:0,Learning:1,Review:2,Relearning:3}),J=864e5;function Y(t,e){return Math.floor((t-e)/J)}function K(t,e,i){return Math.min(Math.max(t,e),i)}function Z(t){return t.name=j(t.name),t.desc=j(t.desc),t.sr=!!t.sr,t}function tt(t){return t.title=j(t.title),t.xgid=j(t.xgid),Array.isArray(t.tags)||(t.tags=[]),t.tags=t.tags.map((t=>j(t))),t.question=j(t.question),t.comment=j(t.comment),t}async function et(t,e,i){let n=await t.getCollection(e),s=i?[i]:await t.listPositions(e);const a=[];for(let e of s)n.sr!=!!e.sr&&(e.sr=n.sr?{state:U.New}:void 0,a.push(t.updatePosition(e)));return Promise.all(a)}class it extends HTMLElement{constructor(){super()}$(t){return"string"==typeof t?this.querySelector(t):t}$$(t){return this.querySelectorAll(t)}show(t){this.$(t).classList.remove("d-none")}hide(t){this.$(t).classList.add("d-none")}on(t,e,i){"function"==typeof e?this.addEventListener(t,e):this.$(t).addEventListener(e,i)}}customElements.define("base-component",it);class nt extends HTMLElement{constructor(){super();const t=R();this.innerHTML=`\n<div class="mb-3">\n <label for="${t}" class="form-label">${this.getAttribute("label")}</label>\n <input id="${t}" ${N}="${this.getAttribute("name")}" type="text" class="form-control">\n <div class="invalid-feedback"></div>\n</div>\n `}}customElements.define("input-field",nt);class st extends HTMLElement{constructor(){super();const t=R();this.innerHTML=`\n<div class="mb-3">\n <label for="${t}" class="form-label">${this.getAttribute("label")}</label>\n <textarea id="${t}" ${N}="${this.getAttribute("name")}" rows="3" class="form-control"></textarea>\n <div class="invalid-feedback"></div>\n</div>\n `}}customElements.define("textarea-field",st);class at extends HTMLElement{constructor(){super(),this.innerHTML=`\n<div class="modal fade" tabindex="-1" aria-hidden="true">\n <div class="modal-dialog">\n <div class="modal-content">\n <div class="modal-header bg-body-secondary">\n <h5 class="modal-title">${g("edit-collection")}</h5>\n <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="${g("close")}"></button>\n </div>\n <div class="modal-body">\n <input-field name="name" label="${g("name")}"></input-field>\n <textarea-field name="desc" label="${g("description")}"></textarea-field>\n </div>\n <div class="modal-footer">\n <button type="button" class="btn btn-secondary">${g("cancel")}</button>\n <button type="submit" data-action="save" class="btn btn-primary">${g("save")}</button>\n </div>\n </div>\n </div>\n</div>\n `}async open(t,e,i){this.querySelector(".modal-title").textContent=t,this.querySelector('[data-action="save"]').textContent=e,G(this,i);const n=await k(this.querySelector(".modal"),(t=>"save"!=t||V(this,((t,e)=>{t.name||e.push({name:""})}))));return"save"==n?O(this):null}}customElements.define("modal-edit-collection",at);class ot extends HTMLElement{constructor(){super(),this.innerHTML=`\n<div class="modal fade" tabindex="-1" aria-hidden="true">\n <div class="modal-dialog">\n <div class="modal-content">\n <div class="modal-header bg-body-secondary">\n <h5 class="modal-title text-danger">\n <i class="bi bi-x-circle-fill me-2"></i> ${g("error")}\n </h5>\n <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="${g("close")}"></button>\n </div>\n <div class="modal-body"></div>\n <div class="modal-footer">\n <button type="button" data-bs-dismiss="modal" class="btn btn-secondary">${g("ok")}</button>\n </div>\n </div>\n </div>\n</div>\n `}async open(t){return this.querySelector(".modal-body").innerHTML=t,k(this.querySelector(".modal"))}}customElements.define("modal-error",ot);class rt extends HTMLElement{constructor(){super(),this.innerHTML=`\n<div class="modal fade" tabindex="-1" aria-hidden="true">\n <div class="modal-dialog">\n <div class="modal-content">\n <div class="modal-header bg-body-secondary">\n <h5 class="modal-title text-warning">\n <i class="bi bi-exclamation-triangle-fill me-2"></i> ${g("warning")}\n </h5>\n <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="${g("close")}"></button>\n </div>\n <div class="modal-body"></div>\n <div class="modal-footer">\n <button type="button" class="btn btn-secondary">${g("cancel")}</button>\n <button type="submit" data-action="confirm" class="btn btn-danger">${g("confirm")}</button>\n </div>\n </div>\n </div>\n</div>\n `}async open(t,e){return this.querySelector(".modal-body").innerHTML=t,this.querySelector('button[type="submit"]').innerHTML=e,k(this.querySelector(".modal"))}}customElements.define("modal-warning",rt),customElements.define("page-collections",class extends it{constructor(){super(),this.innerHTML=`\n<div class="d-flex justify-content-between align-items-center">\n <h1>${g("collections")}</h1>\n <span>\n <input type="file" id="importCollection" accept="application/json" style="display: none;">\n <button class="btn btn-primary me-2" onclick="document.getElementById('importCollection').click()"><i class="bi bi-box-arrow-in-up"></i> ${g("import")}</button>\n <button data-action="create" class="btn btn-primary"><i class="bi bi-folder-plus"></i> ${g("create-new-collection")}</button>\n </span>\n</div>\n\n<p ${h}="db-summary"></p>\n\n<div class="container border rounded"></div>\n<modal-warning></modal-warning>\n<modal-error></modal-error>\n<modal-edit-collection></modal-edit-collection>\n `}async refresh(){const t=[];t.push(`\n<div class="row p-1 border-bottom rounded-top bg-body-secondary d-none d-md-flex">\n <div class="col-12 col-md-3"><strong>${g("name")}</strong></div>\n <div class="col-12 col-md-6"><strong>${g("description")}</strong></div>\n <div class="col-12 col-lg-2 col-md-1"><strong>${g("positions")}</strong></div>\n <div class="col-12 col-md-1"><strong>${g("actions")}</strong></div>\n</div>\n `);const e=await A.db.listCollections(!0);e.sort(((t,e)=>t.name.localeCompare(e.name))),e.forEach(((i,n)=>{t.push(`\n<div class="row p-1 pt-2${n==e.length-1?"":" border-bottom"}">\n <div class="col-12 col-md-3">${i.name}</div>\n <div class="col-12 col-md-6">${i.desc||""}</div>\n <div class="col-12 col-lg-2 col-md-1">${i.size}</div>\n <div data-coll-id="${i.id}" class="col-12 col-md-1 d-flex gap-2 align-items-start">\n <a data-action="view" href="#positions?collection=${i.id}" title="${g("tooltip-view-collection")}" class="btn btn-outline-success btn-sm"><i class="bi bi-eye-fill"></i></a>\n <div class="btn-group">\n <button type="button" class="btn btn-sm dropdown-toggle" data-bs-toggle="dropdown" data-bs-display="static" aria-expanded="false"></button>\n <ul class="dropdown-menu dropdown-menu-end">\n <li><button data-action="edit" title="${g("tooltip-edit-collection")}" class="dropdown-item" href="#"><i class="bi bi-pencil-fill me-2"></i>${g("edit")}</button></li>\n <li><button data-action="delete" title="${g("tooltip-delete-collection")}" class="dropdown-item" href="#"><i class="bi bi-trash-fill me-2"></i>${g("delete")}</button></li>\n <li><button data-action="export" class="dropdown-item" href="#"><i class="bi bi-box-arrow-down me-2"></i>${g("export")}</button></li>\n </ul>\n </div>\n </div>\n</div>\n `)})),this.$(".container").innerHTML=t.join("\n"),v(this,{collections:e.length,positions:e.reduce(((t,e)=>t+e.size),0)}),_(this)}async connectedCallback(){this.refresh(),this.on("#importCollection","change",(async()=>{const t=this.$("#importCollection"),e=t.files[0];if(e){try{const t=await e.text(),i=JSON.parse(t);if(await A.db.existsCollection(i.name))return void this.$("modal-error").open(g("error-import-collection-duplicate",i));await async function(t,e){if(e.version>t.version)throw new Error("error-import-collection-version");const i=Z({name:e.name,desc:e.desc,sr:e.sr}),n=await t.createCollection(i),s=[];return e.positions.forEach((e=>{e.id_coll=n,e.sr=i.sr?{state:U.New}:void 0,tt(e),s.push(t.addPosition(e))})),Promise.all(s).then((()=>n))}(A.db,i),S(g("toast-collection-imported",i)),this.refresh()}catch(t){const e=g(t.message);this.$("modal-error").open(e!=t.message?e:g("error-import-collection-generic",{error:e}))}t.value=""}})),this.on('[data-action="create"]',"click",(async()=>{const t=await this.$("modal-edit-collection").open(g("new-collection"),g("create"),{});t&&(await A.db.createCollection(t),this.refresh())}));const t=async t=>{const e=t.getAttribute("data-action"),i=t.closest("[data-coll-id]"),n=parseInt(i.getAttribute("data-coll-id")),s=await A.db.getCollection(n);if("delete"==e){const t=await A.db.countPositions(n);await this.$("modal-warning").open(g("confirm-delete-collection",{name:s.name,positions:t}),g("delete"))&&(await A.db.deleteCollection(n),this.refresh(),S(g("toast-collection-deleted",s)))}else if("edit"==e){const t=await this.$("modal-edit-collection").open(g("edit-collection"),g("save"),s);t&&(t.id=n,await A.db.updateCollection(t),et(A.db,n),this.refresh(),S(g("toast-collection-updated",s)))}else if("export"==e){const t=await async function(t,e){const i=await t.getCollection(e),n=await t.listPositions(e);return{version:t.version,name:i.name,desc:i.desc,sr:i.sr,positions:n.map((t=>({title:t.title,xgid:t.xgid,tags:t.tags,question:t.question,comment:t.comment})))}}(A.db,n);T(t,`${s.name}.json`)}};this.on(".container","click",(async e=>{const i=e.target.closest("button");i&&t(i)}))}});class lt extends HTMLElement{constructor(){super();const t=R();this.innerHTML=`\n<div class="mb-3">\n <label for="${t}" class="form-label">${this.getAttribute("label")}</label>\n <select id="${t}" ${N}="${this.getAttribute("name")}" class="form-select"></select>\n <div class="invalid-feedback"></div>\n</div>\n `,this._select=this.querySelector("select")}set(t){const e=t.map((t=>`<option value="${t.value}">${t.text}</option>`));this._select.innerHTML=e.join("")}get value(){return this._select.value}set value(t){this._select.value=t}}customElements.define("select-field",lt),customElements.define("positions-filter",class extends it{constructor(){super(),this._readyPromise=new Promise((t=>{this._resolveReadyPromise=t})),this.innerHTML=`\n<div class=" card bg-body-secondary mb-3">\n <div class="container-fluid p-2">\n <form>\n <div class="row">\n <div class="col-md-6 col-xl-4">\n <select-field name="collections" label="${g("collection")}"></select-field>\n </div>\n <div class="col-md-6 col-xl-4">\n <select-field name="categories" label="${g("category")}"></select-field>\n </div>\n </div>\n </form>\n </div>\n</div>\n `}async refresh(){const t=E(),e=await A.db.listCollections();e.sort(((t,e)=>t.name.localeCompare(e.name))),e.unshift({id:0,name:g("all")}),this._collections.set(e.map((t=>({value:t.id,text:t.name})))),this._collections.value=t.collection||"0";let i=await A.db.getUniquePositionCategories();i.sort(((t,e)=>t.localeCompare(e))),i=i.map((t=>({value:t,text:t}))),i.unshift({value:"",text:g("all")}),this._categories.set(i),this._categories.value=t.category||""}get collection(){const t=this._collections.value;return t&&parseInt(t)}get category(){return this._categories.value}get search(){return this.$('[name="filter-text"]')?.value}ready(){return this._readyPromise}dispatchChange(){z({collection:this.collection||"",category:this.category||""}),this.dispatchEvent(new CustomEvent("positions-filter-change",{detail:{collection:this.collection,category:this.category,search:this.search},bubbles:!0}))}async connectedCallback(){this._collections=this.$('[name="collections"]'),this._categories=this.$('[name="categories"]'),this.on(".card","change",(t=>this.dispatchChange(t))),await this.refresh(),this._resolveReadyPromise()}});class ct extends HTMLElement{constructor(){super(),this._pos=JSON.parse(this.getAttribute("pos")),this.innerHTML=`\n<style>\nbutton[data-action="view-pos"] {\n all: unset;\n cursor: pointer;\n}\n</style>\n<div class="col">\n <div class="card h-100">\n <button data-action="view-pos">\n ${this.diagram()}\n </button>\n <div class="card-body">\n <div class="fs-5 fw-bold text-truncate">${this._pos.title}</div>\n </div>\n <div class="card-footer text-end">\n <button class="btn btn-outline-primary btn-sm" data-action="edit-pos" title="${g("tooltip-edit-position")}"><i class="bi bi-pencil-fill"></i></button>\n <button class="btn btn-outline-danger btn-sm" data-action="delete-pos" title="${g("tooltip-delete-position")}"><i class="bi bi-trash-fill"></i></button>\n </div>\n </div>\n</div>\n `}set pos(t){this._pos=t,this.querySelector(".card.h-100 > div:first-child").innerHTML=this.diagram(),this.querySelector(".card-body > div").textContent=this._pos.title}diagram(){return P(this._pos.xgid,{classNames:["card-img-top"]})}}customElements.define("position-card",ct);class dt extends HTMLElement{constructor(){super(),this.innerHTML='\n<div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4"></div>\n '}async show(t){const e=[];t.data.forEach((({id:t,xgid:i,title:n})=>{e.push(`<position-card data-posid="${t}" pos='${JSON.stringify({xgid:i,title:n})}'></position-card>`)})),this.querySelector(".row").innerHTML=e.join("\n")}}customElements.define("positions-grid",dt);class ut{constructor(t){this.reset(),this.set(t)}reset(){this.board=Array(26).fill(0),this.cubePosition=0,this.cubeValue=0,this.maxCubeValue=6,this.turn=1,this.dice="00",this.scoreBlack=0,this.scoreWhite=0,this.matchLength=0,this.crawfordGame=!1,this.jacoby=!1,this.beaver=!1}setFromXGID(t){this.reset(),t.startsWith("XGID=")&&(t=t.substring(5));const e=t.split(":"),i=e.map(Number);for(let e=0;e<=25;e++){let i=t.codePointAt(e)-64;i>0&&(i>15&&(i=32-i),this.board[e]=i)}this.cubeValue=i[1],this.cubePosition=i[2],this.turn=i[3],this.dice=e[4],this.scoreWhite=i[5],this.scoreBlack=i[6],this.matchLength=i[8],this.matchLength>0?this.crawfordGame=1==i[7]:(this.jacoby=!!(1&i[7]),this.beaver=!!(2&i[7])),this.maxCubeValue=i[9]}setFromGnuBgId(t){this.reset();const[e,i]=t.split(":").map((function(t){const e=[];for(let i of atob(t)){const t=i.charCodeAt(0).toString(2).padStart(8,"0");e.push(...t.split("").reverse())}return e.map(Number)}));let n=0;function s(t){let e=0;for(let s=0;s<t;s++)e|=i[n++]<<s;return e}switch(this.cubeValue=s(4),this.maxCubeValue=15,s(2)){case 0:this.cubePosition=-1;break;case 1:this.cubePosition=1}this.turn=2*s(1)-1,this.crawfordGame=0!=s(1),s(4),s(1)?(this.dice="D",s(8)):(s(2),this.dice=`${s(3)}${s(3)}`),this.matchLength=s(15),this.scoreBlack=s(15),this.scoreWhite=s(15),n=0;for(let t=this.turn;1==Math.abs(t);t-=2*this.turn)for(let i=1;i<=25;i++)for(;e[n++];)this.board[t<0?i:25-i]+=t}set(t){if(ut.isValidXgid(t))this.setFromXGID(t);else{if(!ut.isValidGnuBgId(t))return!0;this.setFromGnuBgId(t)}}setInitialPosition(){this.setFromXGID("XGID=-b----E-C---eE---c-e----B-:0:0:1:00:0:0:0:0:6")}get(){return"XGID="+[this.board.map((t=>0==t?"-":t>0?String.fromCodePoint(64+t):String.fromCodePoint(96-t))).join(""),this.cubeValue,this.cubePosition,this.turn,this.dice,this.scoreWhite,this.scoreBlack,this.crawfordGame?1:0,this.matchLength,this.maxCubeValue].join(":")}static isValidXgid(t){return/^XGID=[-a-oA-O]{26}:\d+:-?[01]:-?1:(00|[DBR]|[1-6]{2}):\d+:\d+:[0-3]:\d+:\d+$/.test(t)}static isValidGnuBgId(t){return/^[A-Za-z0-9+/]{14}:[A-Za-z0-9+/]{12}$/.test(t)}clone(){return new ut(this.get())}vpos=t=>this.turn<0?25-t:t;vboard=t=>this.turn<0?-this.board[25-t]:this.board[t];isLegalPlay(t,e){if(t<0||t>25||e<0||e>25||t<=e)return!1;if(this.vboard(t)<=0)return!1;if(this.vboard(25)>0&&25!=t)return!1;if(e>0)return this.vboard(e)>-2;for(let e=24;e>this.vpos(t);e--)if(this.vboard(e)>0)return!1;return this.vpos(t)<=6}isLegalMove(t){const e=[...this.board];let i=!0;for(let e=0;e<t.length;e++){const{from:n,to:s}=t[e];if(!this.isLegalPlay(n,s)){i=!1;break}this.moveSingleChecker(n,s)}return this.board=e,i}moveSingleChecker(t,e){const i=this.vboard(e)<0;return this.board[this.vpos(t)]-=this.turn,0!=e&&(i&&(this.board[this.vpos(0)]-=this.turn,this.board[this.vpos(e)]=0),this.board[this.vpos(e)]+=this.turn),i}playMove(t){t.forEach((t=>this.moveSingleChecker(t.from,t.to)))}flipTurn(){this.turn=-this.turn}acceptDouble(t){this.cubeValue=Math.min(this.maxCubeValue,this.cubeValue+1),this.cubePosition=t}acceptRedouble(){this.acceptDouble(-this.cubePosition)}describeMove(t){const e=t.map((({from:t,to:e})=>({t:`${25==t?"bar":t}/${0==e?"off":e}${this.vboard(e)<0?"*":""}`,c:1})));for(let t=1;t<e.length;t++)e[t].t==e[t-1].t&&(e[t].c+=e[t-1].c,e[t-1].c=0);return e.filter((t=>t.c>0)).map((t=>t.c>1?`${t.t}(${t.c})`:t.t)).join(" ")}static parseMove(t){const e=[];for(let i of t.split(/[,\s]\s*/)){let t=1;/\([234]\)$/.test(i)&&(t=Number(i.slice(-2,-1)),i=i.slice(0,-3));const[n,s]=i.replace(/[*!?]+$/,"").replace("bar",25).replace("off",0).split("/").map(Number);if(isNaN(n)||isNaN(s))return null;e.push(...Array(t).fill({from:n,to:s}))}return e}getWhitePipCount=()=>this.board.map(((t,e)=>t>0?e*t:0)).reduce(((t,e)=>t+e),0);getBlackPipCount=()=>this.board.map(((t,e)=>t<0?(25-e)*t:0)).reduce(((t,e)=>t-e),0);getWhiteCheckersCount=()=>this.board.filter((t=>t>0)).length;getBlackCheckersCount=()=>this.board.filter((t=>t<0)).length;toDiagram(){const t=["+13-14-15-16-17-18------19-20-21-22-23-24-+","| |BAR| |","+12-11-10--9--8--7-------6--5--4--3--2--1-+"],e=[],i=(t,e)=>4==e&&Math.abs(t)>5?Math.abs(t).toString().padStart(2," ")+" ":t>e?" X ":t<-e?" O ":" ";e.push(t[1-this.turn]);for(let t=0;t<5;t++){const n=[];for(let e=13;e<=24;e++)n.push(i(this.board[e],t)),18==e&&n.push(`|${i(this.board[25],t)}|`);e.push(`|${n.join("")}|`)}e.push(t[1]);for(let t=4;t>=0;t--){const n=[];for(let e=12;e>=1;e--)n.push(i(this.board[e],t)),7==e&&n.push(`|${i(this.board[0],t)}|`);e.push(`|${n.join("")}|`)}e.push(t[this.turn+1]);const n=5+4*this.cubePosition;return this.crawfordGame?e[n+1]+=" Crawford":(e[n+0]+=" +---+",e[n+1]+=` |${(1<<this.cubeValue).toString().padStart(2," ")} |`,e[n+2]+=" +---+"),e.push(""),e.push(`Match X-O: ${this.scoreWhite}-${this.scoreBlack}/${this.matchLength}, pips: X=${this.getWhitePipCount()} O=${this.getBlackPipCount()},${i(this.turn,0)}to play ${this.dice}`),e.join("\n")}print(){}}class pt extends HTMLElement{constructor(){super();const t=this.getAttribute("tags").split(",").map((t=>`<span class="badge text-bg-info rounded-pill ms-1 me-1">${t}</span>`)).join("");this.innerHTML=t}}customElements.define("tag-pills",pt),customElements.define("position-pane",class extends it{constructor(){super(),this._isCard=null!=this.getAttribute("card"),this._diagramOptions={compact:null!=this.getAttribute("compact")}}set pos(t){this._pos=t,this.refresh()}resolveMarkdown(t){let e=window.marked.marked(t||"");const i="(?:bar|\\d+)\\/(?:off|\\d+)(?:\\*|\\([234]\\))?",n=new RegExp(`${i}(?:[,\\s]\\s*${i})*`,"gm");return e=e.replace(n,(function(t){return`\n<span style="white-space:nowrap;"><span class="move"><i class="bi bi-eye me-1"></i>${t}</span>\n<button class="btn btn-outline-secondary btn-sm-inline" data-move="${t}" data-action="preview-arrow" title="${g("tooltip-preview-arrow")}"><i class="bi bi-arrow-down-left"></i></button>\n<button class="btn btn-outline-secondary btn-sm-inline" data-move="${t}" data-action="preview-board" title="${g("tooltip-preview-board")}"><i class="bi bi-eye"></i></button>\n</span>`})),e}renderPosContentCard(){return`\n<div class="flip-card__container">\n <div class="flip-card">\n <div class="flip-card__front tab-content border rounded p-3 markdown">\n ${this.resolveMarkdown(this._pos.question)}\n </div>\n <div class="flip-card__back tab-content border rounded p-3 markdown">\n ${this.resolveMarkdown(this._pos.comment)}\n </div>\n </div>\n</div>\n `}renderPosContentFull(){const t=this._pos;if(t.question){const e=R(),i=R();return`<div>\n \x3c!-- Tab navigation --\x3e\n <ul class="nav nav-tabs" role="tablist">\n <li class="nav-item" role="presentation">\n <button class="nav-link active" id="${e}-tab" data-bs-toggle="tab" data-bs-target="#${e}"\n type="button" role="tab" aria-controls="${e}" aria-selected="true">\n ${g("question")}\n </button>\n </li>\n <li class="nav-item" role="presentation">\n <button class="nav-link" id="${i}-tab" } data-bs-toggle="tab" data-bs-target="#${i}" type="button"\n role="tab" aria-controls="${i}" aria-selected="false">\n ${g("comment")}\n </button>\n </li>\n </ul>\n \x3c!-- Tab panels --\x3e\n <div class="tab-content border border-top-0 rounded-bottom p-3">\n <div class="tab-pane fade show active" id="${e}" role="tabpanel" aria-labelledby="${e}-tab">\n ${this.resolveMarkdown(t.question)}\n </div>\n <div class="tab-pane fade" id="${i}" role="tabpanel" aria-labelledby="${i}-tab">\n ${this.resolveMarkdown(t.comment)}\n </div>\n </div>\n </div>`}return this.resolveMarkdown(t.comment)}flip(){this.querySelector(".flip-card").classList.toggle("flip-card__flipped")}refresh(){const t=this._pos,e=P(t.xgid,this._diagramOptions);this.innerHTML=`\n<style>\n.move > i {\n display: none;\n}\n\n.move.mark {\n cursor: pointer;\n}\n\n.move.mark > i {\n display: inline;\n}\n\nbutton.btn-sm-inline {\n padding: 0.15rem 0.3rem;\n margin-bottom: 0.15rem;\n}\n</style>\n<div class="container-fluid p-0" data-xgid="${t.xgid}">\n <div class="row">\n <div class="d-flex align-items-center justify-content-center">\n <div class="fs-3 mb-2">${t.title||""}</div> ${this._isCard?"":'<tag-pills class="ms-3 mb-2" tags="'+t.tags.join(",")+'"></tag-pills>'}\n </div>\n <div class="col-12 col-md-6 mb-3">\n <div class="card border rounded overflow-hidden">${e}</div>\n <div class="${this._isCard?"d-none":"d-flex align-items-center justify-content-center mt-2"}">\n <span id="copyText" style="white-space:nowrap; overflow: hidden; text-overflow: ellipsis;">${t.xgid}</span>\n <button data-action="copy-xgid" class="btn btn-outline-secondary btn-sm-inline ms-2" aria-label="Copia negli appunti" title="Copia negli appunti"><i class="bi bi-clipboard"></i></button>\n </div>\n </div>\n <div class="col-12 col-md-6">\n ${this._isCard?this.renderPosContentCard():this.renderPosContentFull()}\n </div>\n </div>\n</div>\n `}connectedCallback(){const t=["mark","rounded","text-bg-primary","p-1"];this.on("click",(async e=>{this.$$("span").forEach((e=>{e.classList.remove(...t)})),this.classList.remove("bgd-move-preview");const i=e.target.closest("button"),n=e.target.closest("[data-xgid]");let s=n?.getAttribute("data-xgid");if(i){const e=i.getAttribute("data-move"),n=i.getAttribute("data-action");if("copy-xgid"==n)await(a=s,new Promise(((t,e)=>{navigator.clipboard&&window.isSecureContext?navigator.clipboard.writeText(a).then(t).catch(e):e(new Error("Clipboard API is not available."))}))),S(g("toast-copied-to-clipboard"));else if(n&&e)if(i.closest("span").firstElementChild.classList.add(...t),"preview-arrow"==n)s+=":"+e+"!!";else if("preview-board"==n){const t=new ut;t.set(s),t.playMove(ut.parseMove(e)),this.classList.add("bgd-move-preview"),s=t.get()}}var a;if(s){const t=P(s,this._diagramOptions);n.querySelector(".card").innerHTML=t}}))}}),customElements.define("positions-carousel",class extends it{constructor(){super()}resetHtml(){this.innerHTML=`\n<style>\n.carousel-control-prev,\n.carousel-control-next {\n filter: invert(1);\n width: initial;\n}\n</style>\n<div id="positionCarousel" class="carousel slide" data-bs-touch="true" data-bs-interval="false">\n <div class="carousel-inner">\n <div class="carousel-item" data-slide="0"></div>\n <div class="carousel-item active" data-slide="1"></div>\n <div class="carousel-item" data-slide="2"></div>\n </div>\n\n \x3c!-- Navigation controls --\x3e\n <button class="carousel-control-prev" type="button" data-bs-target="#positionCarousel" data-bs-slide="prev">\n <span class="carousel-control-prev-icon" aria-hidden="true"></span>\n <span class="visually-hidden">${g("prev")}</span>\n </button>\n <button class="carousel-control-next" type="button" data-bs-target="#positionCarousel" data-bs-slide="next">\n <span class="carousel-control-next-icon" aria-hidden="true"></span>\n <span class="visually-hidden">${g("next")}</span>\n </button>\n</div>\n `}async init(t,e,i,n){this.resetHtml();const s=async(t,n)=>{n<0||n>=e||i(this.$(`[data-slide="${t}"]`),n)},a=()=>{n(t),x(this.$(".carousel-control-prev"),"visually-hidden",0==t),x(this.$(".carousel-control-next"),"visually-hidden",t==e-1)};await s(0,t-1),await s(1,t),await s(2,t+1),a(),this.on("#positionCarousel","slid.bs.carousel",(i=>{const n="left"==i.direction?1:-1;t=(t+n+e)%e;const o=(parseInt(document.querySelector("[data-slide].active").getAttribute("data-slide"))+n+3)%3;s(o,t+n),a()}))}next(){this.$(".carousel-control-next").click()}prev(){this.$(".carousel-control-prev").click()}});class ht extends HTMLElement{constructor(){super();const t=R();this.innerHTML=`\n<div class="mb-3">\n <label for="${t}" class="form-label">${this.getAttribute("label")}</label>\n <div class="input-group">\n <input id="${t}" ${N}="${this.getAttribute("name")}" type="text" class="form-control" >\n <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>\n <ul class="dropdown-menu dropdown-menu-end"></ul>\n </div>\n</div>\n `}set(t){const e=t.map((t=>`<li><span role="button" class="dropdown-item">${t}</span></li>`));this.querySelector("ul").innerHTML=e.join("")}connectedCallback(){this.addEventListener("click",(t=>{if(t.stopPropagation(),"button"===t.target.getAttribute("role")){this.querySelector("input").value=t.target.textContent;const e=this.querySelector("ul");new window.bootstrap.Collapse(e,{toggle:!1}).hide()}}))}}customElements.define("combobox-field",ht);class bt extends HTMLElement{constructor(){super();const t=this.getAttribute("height")||"50vh",e=R();this.innerHTML=`\n<style>\n/* Add left border if preview is to the right */\n@media (min-width: 992px) {\n .border-lg-start {\n border-left: 1px solid var(--bs-border-color);\n }\n}\n/* Add top border if preview is below */\n@media (max-width: 992px) {\n .border-md-top {\n border-top: 1px solid var(--bs-border-color);\n }\n}\n</style>\n<label for="${e}" class="form-label">${this.getAttribute("label")}</label>\n<div class="border rounded">\n \x3c!-- Toolbar --\x3e\n <div class="bg-body-secondary p-1 rounded-top">\n <button title="${g("heading1")}" class="btn" data-placeholder="${g("heading1").toLowerCase()}" data-markdown="# $"><i class="bi bi-type-h1"></i></button>\n <button title="${g("heading2")}" class="btn" data-markdown="## $"><i class="bi bi-type-h2"></i></button>\n <button title="${g("heading3")}" class="btn" data-markdown="### $"><i class="bi bi-type-h3"></i></button>\n <button title="${g("bold")}" class="btn" data-placeholder="${g("bold").toLowerCase()}" data-markdown="**$**"><i class="bi bi-type-bold"></i></button>\n <button title="${g("italic")}" class="btn" data-placeholder="${g("italic").toLowerCase()}" data-markdown="*$*"><i class="bi bi-type-italic"></i></button>\n <button title="${g("strikethrough")}" class="btn" data-placeholder="${g("strikethrough").toLowerCase()}" data-markdown="~~$~~"><i class="bi bi-type-strikethrough"></i></button>\n <button title="${g("numbered-list")}" class="btn" data-markdown="\n1. $"><i class="bi bi-list-ol"></i></button>\n <button title="${g("list")}" class="btn" data-markdown="\n- $"><i class="bi bi-list-ul"></i></button>\n <button title="${g("horiz-rule")}" class="btn" data-markdown="$\n\n---\n"><i class="bi bi-hr"></i></button>\n <button title="${g("table")}" class="btn" data-markdown="\nThis is just an example, feel free to add or remove columns and rows.\n| Roll | Move | Comment |\n| - | - | - |\n| 21 | 13/11, 24/23 | Can also slot with 6/5 |\n| 31 | 8/6, 6/5 | Best move by far |\n"><i class="bi bi-table"></i></button>\n <button title="${g("link")}" class="btn" data-placeholder="Wikipedia" data-markdown="[$](https://www.wikipedia.org)"><i class="bi bi-link"></i></button>\n <a style="float:right;" title="${g("markdown-guide-link")}" href="https://www.markdownguide.org/getting-started/" target="_blank" rel="noopener" class="btn"><i class="bi bi-question-lg"></i></a>\n </div>\n\n \x3c!-- Editor and preview --\x3e\n <div class="row g-0">\n <div class="col-12 col-lg-6">\n <textarea style="height:${t};resize:none;"class="form-control border-0" placeholder="${g("write-here")}" id="${e}"></textarea>\n </div>\n <div class="col-12 col-lg-6">\n <div style="height:${t};overflow-y:auto;" class="markdown border-lg-start border-md-top p-3"></div>\n </div>\n </div>\n</div>\n `,this._editor=this.querySelector("textarea"),this._preview=this.querySelector(".border-lg-start")}set value(t){this._editor.value=t,this.updatePreview()}get value(){return this._editor.value}updatePreview(){this._preview.innerHTML=window.marked.marked(this._editor.value)}async connectedCallback(){this.updatePreview(),this.querySelectorAll(".btn[data-markdown]").forEach((t=>{t.addEventListener("click",(()=>{const e=t.getAttribute("data-markdown"),i=t.getAttribute("data-placeholder")||"",n=this._editor.selectionStart,s=this._editor.selectionEnd,a=this._editor.value.slice(n,s),o=e.replace("$",a||i);this._editor.setRangeText(o,n,s,"end");const r=o.match(/([*~]+)(\w+)[*~]/);if(r){const t=n+r[1].length;this._editor.setSelectionRange(t,t+r[2].length)}this._editor.focus(),this.updatePreview()}))})),this._editor.addEventListener("input",(()=>this.updatePreview()))}}customElements.define("markdown-editor",bt);class mt extends HTMLElement{constructor(){super(),this.innerHTML=`\n<div class="modal fade" data-bs-backdrop="static" tabindex="-1" aria-hidden="true">\n <div class="modal-dialog modal-lg">\n <div class="modal-content">\n <div class="modal-header bg-body-secondary">\n <h5 class="modal-title">${g("edit-position")}</h5>\n <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="${g("close")}"></button>\n </div>\n <div class="modal-body">\n <div class="row">\n <div class="col-md-6">\n <select-field name="id_coll" label="${g("collection")}"></select-field>\n <input-field name="title" label="${g("title")}"></input-field>\n <combobox-field name="cat" label="${g("category")}"></combobox-field>\n <input-field name="xgid" label="XGID"></input-field>\n </div>\n \x3c!-- Diagram --\x3e\n <div class="col-md-6">\n <span class="form-label">${g("diagram")}</span>\n <div data-diagram class="border rounded overflow-hidden"></div>\n </div>\n </div>\n\n \x3c!-- Comment --\x3e\n <div class="mt-3 mt-md-0">\n <markdown-editor ${N}="comment" label="${g("comment")}" height="30vh"></markdown-editor>\n </div>\n\n \x3c!-- Question --\x3e\n <div class="row mt-3">\n <p class="text-small text-muted mb-2" ${h}="optional-question"></p>\n <markdown-editor ${N}="question" label="${g("question")}" height="30vh"></markdown-editor>\n </div>\n </div>\n\n <div class="modal-footer">\n <button type="button" class="btn btn-secondary">${g("cancel")}</button>\n <button type="submit" data-action="save" class="btn btn-primary">${g("save")}</button>\n </div>\n </div>\n </div>\n</div>\n `}refreshDiagram(){const t=this.querySelector("[data-diagram]"),e=this.querySelector('[data-field="xgid"]');let i=e.value;if(ut.isValidGnuBgId(i)){const t=new ut;t.setFromGnuBgId(i),i=t.get(),e.value=i}ut.isValidXgid(i)?t.innerHTML=P(i):t.innerHTML=`<div class="text-muted text-center my-5">${g("enter-valid-xgid")}</div>`}async open(t,e,i){this.querySelector(".modal-title").textContent=t,this.querySelector('[data-action="save"]').textContent=e;const n=await A.db.listCollections();n.sort(((t,e)=>t.name.localeCompare(e.name))),n.unshift({id:0,name:g("choose-collection")}),this.querySelector('select-field[name="id_coll"]').set(n.map((t=>({value:t.id,text:t.name}))));const s=await A.db.getUniquePositionCategories();s.sort(((t,e)=>t.localeCompare(e))),this.querySelector('combobox-field[name="cat"]').set(s),G(this,i),v(this),_(this),this.refreshDiagram(),this.addEventListener("paste",(t=>{const e=t.target;if("INPUT"==e.tagName||"TEXTAREA"==e.tagName)return;let i=(t.clipboardData||window.clipboardData).getData("text");(ut.isValidGnuBgId(i)||ut.isValidXgid(i))&&(this.querySelector('[data-field="xgid"]').value=i,this.refreshDiagram())})),this.querySelector('[data-field="xgid"]').addEventListener("input",(()=>{this.refreshDiagram()}));const a=await k(this.querySelector(".modal"),(t=>"save"!=t||V(this,((t,e)=>{Number(t.id_coll)||e.push({id_coll:""}),t.title||e.push({title:""}),t.xgid||e.push({title:""}),ut.isValidXgid(t.xgid)||e.push({xgid:g("invalid-xgid")})}))));return"save"==a?O(this):null}}customElements.define("modal-edit-position",mt),customElements.define("page-positions",class extends it{constructor(){super(),this.innerHTML=`\n<div data-type="grid">\n <div class="d-flex justify-content-between align-items-center mb-2">\n <h1>${g("positions")}</h1>\n <button data-action="add-new" class="btn btn-primary"><i class="bi bi-plus-lg"></i> ${g("add")}</button>\n </div>\n <positions-filter></positions-filter>\n <div class="d-flex justify-content-center">\n <div class="spinner-border" role="status">\n <span class="visually-hidden">${g("loading")}</span>\n </div>\n </div>\n <div class="content d-none">\n <p ${h}="positions-found"></p>\n <div>\n <positions-grid></positions-grid>\n </div>\n <nav data-if-empty="hide" aria-label="${g("positions-page-nav")}" class="mt-3">\n <ul class="pagination justify-content-center">\n <li data-action="prev-page" class="page-item"><button class="page-link">${g("previous")}</button></li>\n <li data-action="next-page" class="page-item"><button class="page-link">${g("next")}</button></li>\n </ul>\n </nav>\n </div>\n</div>\n\n<div data-type="carousel" class="d-none">\n <div class="d-flex align-items-center mb-2">\n <button data-action="show-grid" class="btn btn-secondary"><i class="bi bi-arrow-left"></i> ${g("back-to-grid")}</button>\n <h1 class="mx-3 d-none" ${h}="position-i-of-n"></h1>\n </div>\n <positions-carousel></positions-carousel>\n</div>\n\n<modal-warning></modal-warning>\n<modal-edit-position></modal-edit-position>\n `}positionsCursorFactory(){return this._filter.category?A.db.getPositionsIndexByCategory().openCursor(this._filter.category):A.db.getPositionsIndexByCollection().openCursor(this._filter.collection||void 0)}positionsFilterFactory(){if(this._filter.category&&this._filter.collection)return t=>t.id_coll==this._filter.collection}async updatePage(t){const e=await this._pager.read();x(this.$('[data-if-empty="show"]'),"d-none",0!=e.data.length),x(this.$('[data-if-empty="hide"]'),"d-none",0==e.data.length),this.$("positions-grid").show(e),x(this.$('[data-action="prev-page"]'),"disabled",0==e.page),x(this.$('[data-action="next-page"]'),"disabled",e.last),t&&document.querySelector("positions-filter").scrollIntoView({behavior:"instant"}),_(this)}async refresh(){const t=this.$(".spinner-border"),i=this.$(".content"),n=setTimeout((()=>t.classList.remove("d-none")),50);i.classList.add("d-none"),this._pagesize=this.getAttribute("pagesize")||60,this._pager=e.pagedIterator((()=>this.positionsCursorFactory()),this._pagesize,this.positionsFilterFactory()),this._pagerSize=await this._pager.size(),v(this,{positions:this._pagerSize.count,"positions-found":this._pagerSize.count}),this.updatePage(),clearTimeout(n),t.classList.add("d-none"),i.classList.remove("d-none")}async viewPosition(t){let e=await this._pager.read();const i=e.data.findIndex((e=>e.id==t))+e.page*this._pagesize,n=this.$('[data-type="carousel"]'),s=this.$("positions-carousel"),a=async t=>{const i=Math.floor(t/this._pagesize);return i<e.page&&this._pager.prev(),i>e.page&&this._pager.next(),i!=e.page&&(e=await this._pager.read()),t%=this._pagesize,e.data[t]};s.init(i,this._pagerSize.count,(async(t,e)=>{const i=await a(e);t.innerHTML='\n<div class="px-5">\n <position-pane></position-pane>\n</div>\n ',t.querySelector("position-pane").pos=i}),(t=>v(n,{i:t+1,n:this._pagerSize.count}))),this.$('[data-type="grid"]').classList.add("d-none"),n.classList.remove("d-none")}async connectedCallback(){this._filter=this.$("positions-filter"),this._filter.addEventListener("positions-filter-change",(()=>this.refresh())),this.on("click",(async t=>{L();const e=t.target.closest("[data-action]");if(e&&!e.classList.contains("disabled")){const t={...$(e.closest("[data-posid]")),...$(e)};switch(t.action){case"add-new":{const t=await this.querySelector("modal-edit-position").open(g("new-position"),g("add"),{title:"",xgid:"",cat:"",question:"",comment:""});t&&(t.id_coll=Number(t.id_coll),t.id=await A.db.addPosition(t),et(A.db,t.id_coll,t),S(g("toast-position-added")),this.refresh())}break;case"view-pos":this.viewPosition(t.posid);break;case"show-grid":this.updatePage(),this.$('[data-type="carousel"]').classList.add("d-none"),this.$('[data-type="grid"]').classList.remove("d-none");break;case"edit-pos":{const e=await A.db.getPosition(Number(t.posid)),i=await this.querySelector("modal-edit-position").open(g("edit-position"),g("save"),structuredClone(e));i&&(i.id=e.id,i.id_coll=Number(i.id_coll),await A.db.updatePosition(i),et(A.db,i.id_coll,i),this.refresh(),S(g("toast-position-updated")))}break;case"delete-pos":{const e=await A.db.getPosition(Number(t.posid)),i=await A.db.getCollection(e.id_coll);await this.$("modal-warning").open(g("confirm-delete-position",{name:e.title,coll:i.name}),g("delete"))&&(await A.db.deletePosition(e.id),this.refresh(),S(g("toast-position-deleted")))}break;case"prev-page":this._pager.prev(),this.updatePage(!0);break;case"next-page":this._pager.next(),this.updatePage(!0);break;case"prev-card":this.$("positions-carousel").prev();break;case"next-card":this.$("positions-carousel").next()}}})),await this._filter.ready(),this.refresh()}});class gt extends HTMLElement{constructor(){super();const t=R();this.innerHTML=`\n<div class="form-check form-switch mb-2">\n <input id="${t}" ${N}="${this.getAttribute("name")}" type="checkbox" role="switch" class="form-check-input">\n <label for="${t}" class="form-check-label">${this.getAttribute("label")}</label>\n</div>\n `}}customElements.define("checkbox-field",gt);class vt extends HTMLElement{constructor(){super()}rebuild(){this.innerHTML=`\n <h1 class="mb-4">${g("settings")}</h1>\n\n<div class="accordion mb-4" id="settingsAccordion">\n \x3c!-- General settings --\x3e\n <div class="accordion-item">\n <h2 class="accordion-header" id="headingGeneral">\n <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"\n data-bs-target="#collapseGeneral" aria-expanded="false" aria-controls="collapseGeneral">\n ${g("settings-general")}\n </button>\n </h2>\n <div id="collapseGeneral" class="accordion-collapse collapse" aria-labelledby="headingGeneral"\n data-bs-parent="#settingsAccordion">\n <div class="accordion-body">\n <div class="row g-3">\n <div class="col-md-6"><select-field name="${M.AppLanguage}" label="${g("language")}"></select-field>\n </div>\n <div class="col-md-6"><select-field name="${M.AppTheme}" label="${g("theme")}"></select-field></div>\n </div>\n </div>\n </div>\n </div>\n\n \x3c!-- Training --\x3e\n <div class="accordion-item">\n <h2 class="accordion-header" id="headingTraining">\n <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"\n data-bs-target="#collapseTraining" aria-expanded="false" aria-controls="collapseTraining">\n ${g("settings-train-pos")}\n </button>\n </h2>\n <div id="collapseTraining" class="accordion-collapse collapse" aria-labelledby="headingTraining"\n data-bs-parent="#settingsAccordion">\n <div class="accordion-body">\n <div class="row g-3">\n <div class="col-md-6">\n <label for="maxNewCardsPerSession"\n class="form-label">${g("settings-fsrs-max-new-cards-per-session")}</label>\n <input type="number" data-field="${M.TrainPosMaxNewCardsPerSession}" class="form-control"\n id="maxNewCardsPerSession" min="1" max="99">\n </div>\n\n <div class="col-md-6">\n <label for="maxTotalCardsPerSession" class="form-label">${g("settings-fsrs-max-cards-per-session")}</label>\n <input type="number" data-field="${M.TrainPosMaxCardsPerSession}" class="form-control"\n id="maxTotalCardsPerSession" min="1" max="999">\n </div>\n\n <div class="col-md-6">\n <label for="fsrsRatingSystem" class="form-label">${g("settings-fsrs-rating-ui")}</label>\n <select data-field="${M.TrainPosRatingSystem}" id="fsrsRatingSystem" class="form-select">\n <option value="">${g("settings-fsrs-rating-ui-standard")}</option>\n <option value="a">${g("settings-fsrs-rating-ui-advanced")}</option>\n </select>\n </div>\n\n <div class="col-md-6">\n <label for="fsrsDesiredRetention" class="form-label">${g("settings-fsrs-retention")}</label>\n <select data-field="${M.TrainPosDefaultRetention}" id="fsrsDesiredRetention" class="form-select">\n <option value="0.80">${g("settings-fsrs-retention-80")}</option>\n <option value="0.85">${g("settings-fsrs-retention-85")}</option>\n <option value="0.90">${g("settings-fsrs-retention-90")}</option>\n <option value="0.95">${g("settings-fsrs-retention-95")}</option>\n </select>\n </div>\n\n <div class="small mb-3 text-muted">${g("settings-fsrs-advanced-note")}</div>\n </div>\n </div>\n </div>\n </div>\n\n \x3c!-- Diagrams --\x3e\n <div class="accordion-item">\n <h2 class="accordion-header" id="headingDiagrams">\n <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"\n data-bs-target="#collapseDiagrams" aria-expanded="false" aria-controls="collapseDiagrams">\n ${g("settings-diagrams")}\n </button>\n </h2>\n <div id="collapseDiagrams" class="accordion-collapse collapse" aria-labelledby="headingDiagrams"\n data-bs-parent="#settingsAccordion">\n <div class="accordion-body">\n <div class="row g-3">\n <div class="col-md-6">\n <select-field name="${M.BgdTheme}" label="${g("theme")}"></select-field>\n <checkbox-field name="${M.BgdHomeBoardAtLeft}" label="${g("home-board-left")}"></checkbox-field>\n <checkbox-field name="${M.BgdHidePipcount}" label="${g("hide-pipcount")}"></checkbox-field>\n <checkbox-field name="${M.BgdHidePointNumbers}" label="${g("hide-point-numbers")}"></checkbox-field>\n </div>\n <div class="col-md-6 col-lg-3">\n <div class="card border rounded overflow-hidden mt-3"></div>\n </div>\n </div>\n </div>\n </div>\n </div>\n</div>\n\n\x3c!-- Backup and restore --\x3e\n<div class="card">\n <div class="card-header">\n ${g("settings-backup-restore")}\n </div>\n <div class="card-body">\n <p class="mb-3">${g("settings-backup-restore-intro")}</p>\n\n <div class="d-flex flex-column flex-sm-row gap-2">\n <button data-action="backup" class="btn btn-outline-primary" id="backupBtn">${g("settings-backup")}</button>\n <button data-action="restore" class="btn btn-outline-secondary" id="restoreBtn">${g("settings-restore")}</button>\n <input type="file" id="restoreInput" accept=".json" hidden>\n </div>\n </div>\n</div>\n\n\x3c!-- About --\x3e\n<div class="card mt-4 mb-3">\n <div class="card-header">\n ${g("settings-about")}\n </div>\n <div class="card-body">\n <p>Copyright (c) 2025 Alessandro Scotti</p>\n <p>${g("settings-about-text")}</p>\n <h1 class="h4 mt-3">${g("settings-about-acknowledgements")}</h2>\n <p>${g("settings-about-acknowledgements-text")}</p>\n <ul class="mb-3">\n <li><a href="https://github.com/ascottix/bgdiagram" target="_blank" rel="noopener">BgDiagram</a> â€“ ${g("settings-about-ack-bgdiagram")}</li>\n <li><a href="https://getbootstrap.com/" target="_blank" rel="noopener">Bootstrap</a> â€“ ${g("settings-about-ack-bootstrap")}</li>\n <li><a href="https://github.com/cure53/DOMPurify" target="_blank" rel="noopener">DOMPurify</a> â€“ ${g("settings-about-ack-dompurify")}</li>\n <li><a href="https://marked.js.org/" target="_blank" rel="noopener">Marked</a> â€“ ${g("settings-about-ack-marked")}</li>\n </ul>\n <h1 class="h4 mt-3">${g("settings-about-contacts")}</h2>\n <p>${g("settings-about-contacts-text")}</p>\n </div>\n</div>\n\n\x3c!-- Confirm restore modal --\x3e\n<div class="modal fade" id="restoreConfirmModal" tabindex="-1" aria-labelledby="restoreConfirmLabel" aria-hidden="true">\n <div class="modal-dialog">\n <div class="modal-content">\n\n <div class="modal-header bg-body-secondary">\n <h5 class="modal-title text-warning" id="restoreConfirmLabel"><i class="bi bi-exclamation-triangle-fill me-2"></i> ${g("warning")}</h5>\n <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="${g("close")}"></button>\n </div>\n\n <div class="modal-body">\n <p>${g("warning-restore-backup")}</p>\n <input type="text" class="form-control" placeholder="${g("write-ok-to-continue")}" id="confirmRestoreInput" autocomplete="off">\n </div>\n\n <div class="modal-footer">\n <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">${g("cancel")}</button>\n <button type="button" data-action="restore" class="btn btn-danger" id="confirmRestoreBtn">${g("continue")}</button>\n </div>\n\n </div>\n </div>\n</div>\n\n<modal-error></modal-error>\n `,this.querySelector(`[name="${M.AppLanguage}"]`).set([{text:"Auto",value:""},{text:"English",value:"en"},{text:"Italiano",value:"it"}]),this.querySelector(`[name="${M.AppTheme}"]`).set([{text:g("theme-auto"),value:""},{text:g("theme-light"),value:"light"},{text:g("theme-dark"),value:"dark"}]),this.querySelector(`[name="${M.BgdTheme}"]`).set([{text:"Fluo",value:"fluo"},{text:"Marina",value:"marina"},{text:"Mirage",value:"mirage"},{text:"Monochrome",value:"mono"},{text:"Mountain",value:"mountain"},{text:"Patriot",value:"patriot"},{text:"Pastels - Aqua Green",value:"aqua-green"},{text:"Pastels - Clear Sky",value:"serene-sky"},{text:"Pastels - Coral",value:"delicate-coral"},{text:"Pastels - Lavender",value:"soft-lavender"},{text:"Pastels - Pink",value:"petal-pink"}]);const t=this.querySelector("#confirmRestoreInput"),i=this.querySelector("#confirmRestoreBtn");t.addEventListener("input",(()=>{const e=t.value.trim().toLowerCase();i.disabled="ok"!==e})),this.querySelector('[data-action="backup"]').addEventListener("click",(async()=>{T(await async function(t){const i={},n=t.transaction(null,e.Readonly);return i.collections=await t.collections().list(n),i.positions=await t.positions().list(n),{version:t.version,timestamp:(new Date).toISOString(),data:i}}(A.db),"bgdiagramdb_backup_"+(new Date).toISOString().substring(0,17).replace(/[-:]/g,"").replace("T","_")+".json")})),this.querySelector('[data-action="restore"]').addEventListener("click",(async()=>{if(t.value="",i.disabled=!0,"restore"!=await k(this.querySelector("#restoreConfirmModal")))return;const e=this.querySelector("#restoreInput");e.value="",e.click()}))}async refresh(t){await A.refreshSettings(),t&&(this.rebuild(),document.getElementById("navbar").innerHTML="<app-navbar></app-navbar>"),G(this,A.settings),this.querySelector(".card").innerHTML=P("XGID=-b----E-C---eE---c-e----B-:0:0:1:00:0:0:0:0:6")}async connectedCallback(){this.refresh(!0),this.addEventListener("input",(async t=>{if("file"==t.target.getAttribute("type")){const i=t.target.files[0];if(!i)return;if(!i.name.endsWith(".json"))return;try{const t=await i.text(),n=JSON.parse(t);await async function(t,i){if(!i.version||isNaN(i.version)||i.version>t.version)throw new Error("error-restore-backup-version");const n=i.data;if(!n||!Array.isArray(n.collections)||!Array.isArray(n.positions))throw new Error("error-restore-backup-data");const s=t.transaction(null,e.Writable);t.collections().clear(s),t.positions().clear(s);for(const e of n.collections)Z(e),await t.collections().put(e,s);for(const e of n.positions)tt(e),await t.positions().put(e,s)}(A.db,n),S(g("toast-database-restored",n))}catch(t){const e=g(t.message);this.querySelector("modal-error").open(e!=t.message?e:g("error-restore-backup",{error:e}))}return void(t.target.value="")}const i=O(t.target.closest("div")),n=(t,e,n)=>{let s=i[t];null!=s&&(s=Number(s),isNaN(s)&&(s=0),i[t]=Math.min(Math.max(s,e),n))};n(M.TrainPosMaxCardsPerSession,1,999),n(M.TrainPosMaxNewCardsPerSession,1,99);for(const t in i)await A.db.setSetting(t,i[t]);this.refresh(null!=i[M.AppLanguage])}))}}customElements.define("page-settings",vt);class ft extends HTMLElement{constructor(){super(),this.innerHTML="\n<h1>Test page</h1>\n "}async connectedCallback(){}}customElements.define("page-test",ft);const wt=Object.freeze({Crawford:1,Beaver:2,Jacoby:4});function yt(t){return t.charCodeAt(0)-65}function kt(t){switch(t[0]){case" ":return null;case"t":case"c":return t[0];default:{const e=t.substring(0,2),i=[];for(let e=2;e<t.length;e+=2){const n=yt(t[e]),s=yt(t[e+1]);i.push(`${n}/${s}`)}return e+":"+i.join(" ")}}}function xt(t){const e=function(t){const e=t[0]>="A"&&t[0]<="Z",i=e?yt(t[0]):0,n=e?yt(t[1]):0;return{flags:i,matchLength:n,score:[n?yt(t[2]):0,n?yt(t[3]):0],plays:(e?n?t.slice(4):t.slice(2):t).replace(/( |c|t|[1-6][1-6])/g,",$1").substring(1).split(",").map(kt)}}(t),i=[],n=new ut;n.setInitialPosition(),n.jacoby=!!(e.flags&wt.Jacoby),n.beaver=!!(e.flags&wt.Beaver),n.matchLength=e.matchLength,n.scoreBlack=e.score[0],n.scoreWhite=e.score[1];for(let t=0;t<e.plays.length;t++){const s=e.plays[t];if(s){const e=1&t?-1:1;if("t"==s[0])n.acceptDouble(e);else{const t=s.split(":")[1];t&&(n.playMove(ut.parseMove(t)),i.push(n.get()))}}n.flipTurn()}return i}class $t extends HTMLElement{constructor(){super(),this._idToggle=R(),this._idDescription=R(),this.innerHTML=`\n<button\n class="btn btn-link p-0 align-baseline"\n data-bs-toggle="collapse"\n data-bs-target="#${this._idDescription}"\n aria-expanded="false"\n aria-controls="${this._idDescription}"\n id="${this._idToggle}">\n ${this.getAttribute("label")||g("train-pos-intro-toggle")}\n</button>\n<div class="collapse mt-3" id="${this._idDescription}" aria-labelledby="${this._idToggle}">\n</div>\n `}set description(t){this.querySelector("#"+this._idDescription).innerHTML=t}}customElements.define("collapsible-howto",$t),customElements.define("slide-carousel",class extends it{constructor(){super()}resetHtml(){this.innerHTML='\n<div id="slideCarousel" class="carousel slide" data-bs-touch="true" data-bs-interval="false">\n <div class="carousel-inner">\n <div class="carousel-item active" data-slide="0"></div>\n <div class="carousel-item" data-slide="1"></div>\n </div>\n\n <button class="d-none carousel-control-prev" type="button" data-bs-target="#slideCarousel" data-bs-slide="prev" aria-hidden="true"></button>\n <button class="d-none carousel-control-next" type="button" data-bs-target="#slideCarousel" data-bs-slide="next" aria-hidden="true"></button>\n</div>\n '}init(t){this.resetHtml(),this.$('[data-slide="0"]').innerHTML=t}setHiddenSlideHtml(t){const e=parseInt(this.$("[data-slide].active").getAttribute("data-slide"));this.$(`[data-slide="${1-e}"]`).innerHTML=t}next(t){this.setHiddenSlideHtml(t),this.$(".carousel-control-next").click()}prev(t){this.setHiddenSlideHtml(t),this.$(".carousel-control-prev").click()}}),customElements.define("train-pipcount-stats",class extends it{constructor(){super(),this.innerHTML=`\n <div class="d-flex flex-wrap gap-3 align-items-center text-muted">\n <div>\n <strong>${g("positions")}:</strong> <span id="stat-total">0</span>\n <i class="bi bi-check-circle-fill text-success ms-1"></i> <span id="stat-correct">0</span>\n <i class="bi bi-x-circle-fill text-danger ms-1"></i> <span id="stat-wrong">0</span>\n </div>\n <div title="${g("tooltip-train-pip-time-stats")}">\n <i class="bi bi-stopwatch-fill text-primary"></i>\n <span id="stat-avg">0.0s</span> /\n <span id="stat-min">0.0s</span> â€“\n <span id="stat-max">0.0s</span>\n </div>\n </div>\n `}updateStats(t,e,i,n,s,a){this.$("#stat-total").textContent=t,this.$("#stat-correct").textContent=e,this.$("#stat-wrong").textContent=i,this.$("#stat-avg").textContent=g("unit-seconds",{n:n.toFixed(1)}),this.$("#stat-min").textContent=g("unit-seconds",{n:s.toFixed(1)}),this.$("#stat-max").textContent=g("unit-seconds",{n:a.toFixed(1)})}disconnectedCallback(){this.querySelectorAll("[title]").forEach((t=>{window.bootstrap.Tooltip.getInstance(t)?.dispose()}))}connectedCallback(){this.updateStats(0,0,0,0,0,0),_(this,{trigger:"click hover"})}}),customElements.define("page-train-pipcount",class extends it{constructor(){super(),this.innerHTML=`\n<div id="tp-controls">\n <h1>${g("train")} â†’ ${g("train-pipcount")}</h1>\n <div>${g("train-pip-caption")} <collapsible-howto></collapsible-howto></div>\n <div class="d-flex justify-content-center mt-3">\n <button data-action="start" class="btn btn-primary"><i class="bi bi-arrow-right"></i> ${g("start")}</button>\n </div>\n</div>\n\n<div id="tp-header" class="d-none d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-3">\n <h1 class="h4 mb-2 mb-md-0">${g("train")}<i class="bi bi-arrow-right-short fs-3"></i>${g("train-pipcount")}</h1>\n <train-pipcount-stats></train-pipcount-stats>\n</div>\n\n<div id="tp-card" class="d-none bgd-hide-point-numbers bgd-hide-pipcount">\n <div id="tp-card-toolbar" class="d-flex justify-content-center gap-3 mb-2">\n <button class="btn btn-primary" data-action="show-answer"><i class="bi bi-eye"></i> ${g("show-answer")}</button>\n <button class="btn btn-danger d-none" data-mode="card-back" data-action="count-wrong"><i class="bi bi-x"></i> ${g("train-pip-rate-wrong")}</button>\n <button class="btn btn-success d-none" data-mode="card-back" data-action="count-right"><i class="bi bi-check-lg"></i> ${g("train-pip-rate-right")}</button>\n </div>\n <slide-carousel></slide-carousel>\n</div>\n `}showCurrentQuestion(){function t(t){return 0==t?"=":(t>0?"+":"")+t}this._currentPosIndex=function(t){const e=t[t.length-1];return Math.floor(Math.random()*e)}(this._gamesCumulativeCounts),this._currentPosStartTime=Date.now();const e=this.$("slide-carousel"),i="card-"+this._currentPosIndex,n=`<position-pane card compact id="${i}"></position-pane>`;0==this._cards.length?e.init(n):e.next(n);const s=function(t,e,i){let n=0;for(;e[n]<=i;)n++;return xt(t[n])[6+i-(n>0?e[n-1]:0)]}(this._games,this._gamesCumulativeCounts,this._currentPosIndex),a=new ut(s);a.setFromXGID(s);const o=a.getWhitePipCount(),r=a.getBlackPipCount(),l={xgid:s,question:g("train-pip-question"),comment:g("train-pip-comment",{bpc:r,wpc:o,bpdiff:t(r-o),wpdiff:t(o-r)})};this.$("#"+i).pos=l,this.show('[data-action="show-answer"]'),this.$$('[data-mode="card-back"]').forEach((t=>this.hide(t))),this.$("#tp-card").classList.remove("d-none"),this.$("#tp-card").classList.add("bgd-hide-pipcount")}showCurrentAnswer(){this.$("#card-"+this._currentPosIndex).flip(),setTimeout((()=>{this.hide('[data-action="show-answer"]'),this.$$('[data-mode="card-back"]').forEach((t=>this.show(t))),this.$("#tp-card").classList.remove("bgd-hide-pipcount")}),550)}rateCurrentCard(t){this._cards.push({idx:this._currentPosIndex,time:(Date.now()-this._currentPosStartTime)/1e3,success:t}),this.advanceToNextCard()}advanceToNextCard(){const t=this._cards.length,e=this._cards.filter((t=>t.success)).length,i=t-e,n=this._cards.reduce(((t,e)=>t+e.time),0)/this._cards.length,s=Math.min(...this._cards.map((t=>t.time))),a=Math.max(...this._cards.map((t=>t.time)));this.$("train-pipcount-stats").updateStats(t,e,i,n,s,a),this.showCurrentQuestion()}async connectedCallback(){this.$("collapsible-howto").description=g("train-pip-intro");const t=await fetch("./assets/pipcount-games.json");this._games=await t.json(),this._gamesCumulativeCounts=function(t){const e=t.map((t=>function(t){let e=xt(t).length-6;return t.endsWith("c")||(e-=6),Math.max(e,0)}(t))),i=[];let n=0;for(const t of e)n+=t,i.push(n);return i}(this._games),this._cards=[],this.on("click",(async t=>{const e=t.target.closest("button"),i=e?.getAttribute("data-action");switch(i){case"start":this.hide("#tp-controls"),this.show("#tp-header"),this.showCurrentQuestion();break;case"show-answer":this.showCurrentAnswer();break;case"count-right":this.rateCurrentCard(!0);break;case"count-wrong":this.rateCurrentCard(!1)}}))}}),customElements.define("page-train-positions",class extends it{constructor(){super(),this._fsrs45=function(){const t=F,e=K(.9,0,.99),i=K(36500,1,1/0);function n(e){return t[4]-(e-3)*t[5]}function s(e,i){return K(t[7]*n(Q.Good)+(1-t[7])*(e-t[6]*(i-3)),1,10)}function a(e){return t[e-1]}function o(e,i,n,s){return K(s==Q.Again?t[11]*Math.pow(e,-t[12])*(Math.pow(i+1,t[13])-1)*Math.exp(t[14]*(1-n)):i*(1+Math.exp(t[8])*(11-e)*Math.pow(i,-t[9])*(Math.exp(t[10]*(1-n))-1)*(s==Q.Hard?t[15]:s==Q.Easy?t[16]:1)),.01,36500)}function r(t,e){return Math.pow(1+X*t/e,-.5)}function l(t,e){return r(t.state==U.New?0:Y(e,t.lastReview),t.stability)}function c(t){return K(Math.round(t*((Math.pow(e,-2)-1)/X)),1,i)}function d(t,e){switch(t){case U.New:return e==Q.Easy?U.Review:U.Learning;case U.Learning:case U.Relearning:return e>=Q.Good?U.Review:t;case U.Review:return e==Q.Again?U.Relearning:U.Review}}function u(t,e){let i;const n=l(t,e),s=o(t.difficulty,t.stability,n,Q.Hard),a=o(t.difficulty,t.stability,n,Q.Good),r=o(t.difficulty,t.stability,n,Q.Easy),d=c(s,Q.Hard),u=c(a,Q.Good),p=c(r,Q.Easy);switch(t.state){case U.New:i=[6e4,3e5,6e5,c(0,Q.Easy)*J];break;case U.Learning:case U.Relearning:i=[3e5,6e5,u*J,Math.max(p,u+1)*J];break;case U.Review:i=[3e5,Math.min(d,u)*J,Math.max(u,d+1)*J,Math.max(p,u+1)*J]}return i}const p={createNewCard:function(){return{state:U.New}},getScheduledDays:function(t){return t.due?Y(t.due,t.lastReview):0},previewIntervalBeforeNextReview:u,updateCardAfterReview:function(t,e,i){const r={state:d(t.state,i),reps:(t.reps||0)+1,lapses:(t.lapses||0)+(t.state==U.Review&&i==Q.Again?1:0),lastReview:e};switch(t.state){case U.New:r.stability=a(i),r.difficulty=n(i);break;case U.Learning:case U.Relearning:r.stability=t.stability,r.difficulty=t.difficulty;break;case U.Review:r.stability=o(t.difficulty,t.stability,l(t,e),i),r.difficulty=s(t.difficulty,i)}const c=u(t,e)[i-1];return r.due=e+c,r}};return p}(),this.innerHTML=`\n<style>\n#tp-card-toolbar > button {\n padding: 0.1em 1em;\n}\n\nbutton > small {\n margin-bottom: -0.3em;\n display: block;\n}\n</style>\n<div id="tp-controls" class="">\n <h1>${g("train")}<i class="bi bi-arrow-right-short fs-3"></i>${g("train-positions")}</h1>\n <div>${g("train-pos-caption")} <collapsible-howto></collapsible-howto></div>\n <div class="mt-3 d-flex justify-content-center align-items-end gap-2">\n <select-field name="collections" label="${g("collection")}"></select-field>\n <button data-action="start" class="btn btn-primary mb-3"><i class="bi bi-arrow-right"></i> ${g("start")}</button>\n </div>\n <div class="d-flex justify-content-center align-items-end gap-2">\n <div class="fs-5" ${h}="train-pos-session-preview"></div>\n </div>\n</div>\n<div id="tp-card" class="d-none">\n <h1 class="h4 mb-2">${g("train")} â†’ ${g("train-positions")}</h1>\n <div id="tp-card-toolbar" class="d-flex justify-content-center gap-3 mb-2">\n <button class="invisible btn"><small>&nbsp;</small>&nbsp;</button>\n <button class="btn btn-secondary" data-action="show-answer"><i class="bi bi-eye"></i> ${g("show-answer")}</button>\n <button class="btn btn-danger d-none" data-ui="s" data-mode="card-back" data-action="rate-again"><i class="bi bi-x"></i> ${g("train-pos-rate-simple-again")}</button>\n <button class="btn btn-success d-none" data-ui="s" data-mode="card-back" data-action="rate-good"><i class="bi bi-check-lg"></i> ${g("train-pos-rate-simple-good")}</button>\n <button class="btn btn-danger" data-ui="a" data-mode="card-back" data-action="rate-again"><small data-field="int_again"></small><i class="bi bi-emoji-expressionless"></i> ${g("train-pos-rate-again")}</button>\n <button class="btn btn-warning" data-ui="a" data-mode="card-back" data-action="rate-hard"><small data-field="int_hard"></small><i class="bi bi-emoji-neutral"></i> ${g("train-pos-rate-hard")}</button>\n <button class="btn btn-primary" data-ui="a" data-mode="card-back" data-action="rate-good"><small data-field="int_good"></small><i class="bi bi-emoji-smile"></i> ${g("train-pos-rate-good")}</button>\n <button class="btn btn-success" data-ui="a" data-mode="card-back" data-action="rate-easy"><small data-field="int_easy"></small><i class="bi bi-emoji-sunglasses"></i> ${g("train-pos-rate-easy")}</button>\n <button class="invisible btn"><small>&nbsp;</small>&nbsp;</button>\n </div>\n <slide-carousel></slide-carousel>\n</div>\n<div id="tp-summary" class="d-none">\n <h2>${g("well-done")}</h2>\n <div class="fs-5" ${h}="train-pos-session-summary"></div>\n <div class="fs-5">${g("train-pos-no-more-positions")}</div>\n <button class="btn btn-secondary mt-3" data-action="close-summary"><i class="bi bi-arrow-left"></i> ${g("train-pos-back-home")}</button>\n</div>\n `}async onCollectionChange(){z({collection:this._collections.value});const t=parseInt(this._collections.value),e=await A.db.findCardsInState(t,U.New,!0),i=await A.db.findDueCards(t,null,!0);v(this,{newcards:e,duecards:i}),this.$("button").disabled=e+i==0}async appendDueCardsToDeck(t){const e=await A.db.findDueCards(this._idCollection,t);this._deck.push(...e)}async createNewDeck(){this._idCollection=parseInt(this._collections.value),this._deck=await A.db.findCardsInState(this._idCollection,U.New),this._deckIndex=0,this._sessionStartTime=Date.now(),this._deck=this._deck.slice(0,Math.min(this._deck.length,A.settings[M.TrainPosMaxNewCardsPerSession])),await A.db.findDueCards(this._idCollection,null,!0),await this.appendDueCardsToDeck(),this._deck=this._deck.slice(0,Math.min(this._deck.length,A.settings[M.TrainPosMaxCardsPerSession])),this._deck=this._deck.slice(0,1),function(t){for(let e=t.length-1;e>0;e--){const i=Math.floor(Math.random()*(e+1));[t[e],t[i]]=[t[i],t[e]]}}(this._deck)}showCurrentQuestion(){const t=this.$("slide-carousel"),e="card-"+this._deckIndex,i=`<position-pane card id="${e}"></position-pane>`;0==this._deckIndex?(t.init(i),window.scrollTo({top:0,behavior:"smooth"})):t.next(i),this.$("#"+e).pos=this._deck[this._deckIndex],this.hide("#tp-controls"),this.show("#tp-card"),this.show('[data-action="show-answer"]'),this.$$('[data-mode="card-back"]').forEach((t=>this.hide(t)))}showCurrentAnswer(){this._currentCardAnswerTime=Date.now();const t=this._fsrs45.previewIntervalBeforeNextReview(this._deck[this._deckIndex].sr,this._currentCardAnswerTime).map((t=>function(t){const e=Math.round(t/60),i=Math.round(t/3600),n=Math.round(t/86400),s=Math.round(n/7),a=Math.floor(n/30),o=Math.floor(n/365);return e<60?"< "+g("{minutes}",{minutes:e}):i<24?g("{hours}",{hours:i}):n<14?g("{days}",{days:n}):n<49?g("{weeks}",{weeks:s}):n<365?"> "+g("{months}",{months:a}):g("{years}",{years:o+.5*Math.round(n%365/182.5)})}(t/1e3)));G(this,{int_again:t[0],int_hard:t[1],int_good:t[2],int_easy:t[3]}),this.$("#card-"+this._deckIndex).flip(),setTimeout((()=>{this.hide('[data-action="show-answer"]'),this.$$('[data-mode="card-back"]').forEach((t=>this.show(t)));const t=!!A.settings[M.TrainPosRatingSystem];this.$$(`[data-ui="${t?"s":"a"}"]`).forEach((t=>this.hide(t)))}),550)}async rateCurrentCard(t){const e=structuredClone(this._deck[this._deckIndex]);e.sr=this._fsrs45.updateCardAfterReview(e.sr,this._currentCardAnswerTime,t),this.advanceToNextCard()}async advanceToNextCard(){this._deckIndex++,this._deckIndex>=this._deck.length&&(this._deck.length,A.settings[M.TrainPosMaxCardsPerSession],this._deckIndex>=this._deck.length)?this.showSessionSummary():this.showCurrentQuestion()}async showSessionSummary(){const t=this._deck.length,e=this._deck.filter((t=>t.sr.state==U.New)).length,i=t-e,n=Date.now()-this._sessionStartTime;v(this,{totalCards:t,newCards:e,reviewCards:i,sessionDurationMin:Math.max(1,Math.round(n/1e3/60))}),this.hide("#tp-card"),this.show("#tp-summary")}async connectedCallback(){this.$("collapsible-howto").description=`\n${g("train-pos-intro")}\n<div class="alert alert-info d-flex align-items-start gap-2 mt-4" role="alert">\n <i class="bi bi-info-circle fs-4"></i>\n <div>${g("train-pos-advanced-note")}</div>\n</div>`;const t=await A.db.listCollections();t.sort(((t,e)=>t.name.localeCompare(e.name))),t.unshift({id:0,name:g("all")}),this._collections=this.$('[name="collections"]'),this._collections.set(t.map((t=>({value:t.id,text:t.name})))),this._collections.value=E().collection||"0",this._collections.addEventListener("change",(()=>this.onCollectionChange())),this.onCollectionChange(),this.on("click",(async t=>{const e=t.target.closest("button"),i=e?.getAttribute("data-action");switch(i){case"start":await this.createNewDeck(),this.showCurrentQuestion();break;case"show-answer":this.showCurrentAnswer();break;case"rate-again":this.rateCurrentCard(Q.Again);break;case"rate-hard":this.rateCurrentCard(Q.Hard);break;case"rate-good":this.rateCurrentCard(Q.Good);break;case"rate-easy":this.rateCurrentCard(Q.Easy);break;case"close-summary":this.hide("#tp-summary"),this.show("#tp-controls"),this.onCollectionChange()}}))}}),document.addEventListener("DOMContentLoaded",(async function(){await A.init(),window.addEventListener("hashchange",(()=>{q(location.hash.split("?")[0].substring(1)||"home")})),window.addEventListener("hide.bs.modal",(()=>{document.activeElement instanceof HTMLElement&&document.activeElement.blur()})),document.getElementById("navbar").innerHTML="<app-navbar></app-navbar>";const t="home";H(t),q(t)}));
